<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cocon90.Lib.Util</name>
    </assembly>
    <members>
        <member name="T:Cocon90.Lib.Util.Animate.AnimateType">
            <summary>
            动画类型
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Animate.AnimateType.AW_HOR_POSITIVE">
            <summary>
            从左到右展示控件
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Animate.AnimateType.AW_HOR_NEGATIVE">
            <summary>
            从右到左展示控件
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Animate.AnimateType.AW_VER_POSITIVE">
            <summary>
            从上到下展示控件
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Animate.AnimateType.AW_VER_NEGATIVE">
            <summary>
            从下到上展示控件
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Animate.AnimateType.AW_CENTER">
            <summary>
            从中间展示控件
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Animate.AnimateType.AW_HIDE">
            <summary>
            隐藏控件
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Animate.AnimateType.AW_ACTIVATE">
            <summary>
            激活控件
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Animate.AnimateType.AW_SLIDE">
            <summary>
            使用滑动样式展示控件
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Animate.AnimateType.AW_BLEND">
            <summary>
            使用谈出样式展示控件
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Animate.animateHelper">
            <summary>
            让控件执行动画的类
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Animate.animateHelper.SetOpenAnimateMode(System.Windows.Forms.Control,Cocon90.Lib.Util.Animate.AnimateType)">
            <summary>
            执行控件的打开动画
            </summary>
            <param name="form"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Animate.animateHelper.SetCloseAnimateMode(System.Windows.Forms.Control,Cocon90.Lib.Util.Animate.AnimateType)">
            <summary>
            执行控件的隐藏动画
            </summary>
            <param name="form"></param>
        </member>
        <member name="T:Cocon90.Lib.Util.Config.configHelper">
            <summary>
            App.Config文件操作辅助类
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Config.configHelper.GetAppSettingValue(System.String,System.String,System.String)">
            <summary>
            获取指定路径为configFilePath的Config文件的AppSetting里面的指定键值对应的value值，如果configFilePath为NULL，则返回当前程序的Config文件对应的值。
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Controls.Alerter">
            <summary>
            表示一个消息提示控件
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.Alerter.#ctor">
            <summary>
            表示一个消息提示控件
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.Alerter.info(System.String,System.Boolean)">
            <summary>
            显示消息 自动在前面加上“消息提示：”
            </summary>
            <param name="info"></param>
            <param name="isWarn"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.Alerter.info(System.String,System.String,System.Boolean)">
            <summary>
            显示消息
            </summary>
            <param name="info"></param>
            <param name="isWarn"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.Alerter.infoControl(System.Windows.Forms.Control)">
            <summary>
            在指定控件显示指定信息！
            </summary>
            <param name="control"></param>
            <param name="info"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.Alerter.infoControl(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            在指定控件显示指定信息！
            </summary>
            <param name="control"></param>
            <param name="info"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.Alerter.infoControl(System.Windows.Forms.Control,System.String)">
            <summary>
            在指定控件显示指定信息！
            </summary>
            <param name="control"></param>
            <param name="info"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.Alerter.infoControl(System.Windows.Forms.Control,System.String,System.Windows.Forms.Control)">
            <summary>
            在指定控件显示指定信息！
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.Alerter.infoControl(System.Windows.Forms.Control,System.String,System.Boolean,System.Windows.Forms.Control)">
            <summary>
            在指定控件显示指定信息！
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.Alerter.infoControl(System.Windows.Forms.Control,System.String,System.Boolean)">
            <summary>
            在指定控件显示指定信息！
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Controls.Alerter.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.Alerter.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.Alerter.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Controls.controlHelper">
            <summary>
            控件常用功能辅助类
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.controlHelper.BindFocusEventColor(System.Windows.Forms.Control,System.Drawing.Color)">
            <summary>
            给控件  绑定获取焦点时的变色事件
            </summary>
            <param name="control"></param>
            <param name="alertColor"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.controlHelper.BindFocusChildrenEventColor(System.Windows.Forms.Control,System.Drawing.Color)">
             <summary>
            给控件的子控件 绑定获取焦点时的变色事件
             </summary>
             <param name="groupControl"></param>
             <param name="alertColor"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.controlHelper.infoControl(System.Windows.Forms.Control,System.String)">
            <summary>
            在指定控件显示指定信息！内部调用了Alerter.infoControl()方法。
            </summary>
            <param name="control"></param>
            <param name="info"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.controlHelper.BindMouseDragEvent(System.Windows.Forms.Control)">
            <summary>
            为控件绑带支持鼠标拖动事件。
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.controlHelper.BindMouseDragEvent(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            为控件绑带支持鼠标拖动事件。拖动control的时候，moveTarget会执行移动。
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:Cocon90.Lib.Util.Controls.Msg.Toast">
            <summary>
            平常消息提示
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.Msg.Toast.Show(System.String,System.Int32)">
            <summary>
            消息显示 输入消息内容，显示时间，屏幕
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.Msg.Toast.Show(System.String,System.Int32,System.Drawing.Color)">
            <summary>
            消息显示 输入消息内容，显示时间，屏幕
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.Msg.Toast.Show(System.String)">
            <summary>
            消息显示 输入消息内容，屏幕
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.Msg.Toast.Show(System.String,System.Drawing.Color)">
            <summary>
            消息显示 输入消息内容，屏幕
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.Msg.Toast.Hide">
            <summary>
            关闭消息显示
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Controls.MemCombox">
            <summary>
            带记忆功能的Combox
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.MemCombox.#ctor">
            <summary>
             实例化一个带记忆功能的Combox
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Controls.MemCombox.aIniFileName">
            <summary>
            记忆文件的存放名称，系统将存放于程序目录下的"memory"文件夹下
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Controls.MemCombox.aMaxMemCount">
            <summary>
            最大记忆的条数
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Controls.Pager">
            <summary>
            分页控件
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.Pager.#ctor">
            <summary>
            构建一个分页组件
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Controls.Pager.TotalRecord">
             <summary>
            获取或设置 总记录数
             </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Controls.Pager.PageSize">
             <summary>
            获取或设置 每页的数据量
             </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Controls.Pager.PageNumber">
             <summary>
            获取或设置 当前页数 当前是第几页(初始为第1页)
             </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Controls.Pager.getPageTotal">
             <summary>
            获取 页总数 分页后的页总数
             </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Ency.md5">
            <summary>
            MD5签名
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Ency.md5.Ency(System.String)">
            <summary>
            用MD5加密字符串
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Ency.md5Sign">
            <summary>
            MD5签名与校验，服务端要发给客户端一段重要信息前，先将信息进行签名，然后将签名后的结果一起发送。客户端接收到之后，进行校验。如果是原来的信息，则校验成功，返回True。如果信息被修改过，则校验失败，返回False
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Ency.md5Sign.Sign(System.String,System.String)">
            <summary>
            用MD5签名字符串
            </summary>
            <param name="sourceString">需要签名的字符串</param>
            <param name="key">密钥</param>
            <returns>签名结果</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Ency.md5Sign.Verify(System.String,System.String,System.String)">
            <summary>
            进行校验。如果是原来的信息，则校验成功，返回True。如果信息被修改过，则校验失败，返回False
            </summary>
            <param name="sourceString">需要签名的字符串</param>
            <param name="sign">签名结果</param>
            <param name="key">密钥</param>
            <returns>验证结果</returns>
        </member>
        <member name="T:Cocon90.Lib.Util.Ency.decy">
            <summary>
            解密辅助类
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Ency.decy.des(System.String,System.String)">
            <summary>
            DES解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <param name="decryptKey">解密密钥,要求为8位,和加密密钥相同</param>
            <returns>解密成功返回解密后的字符串，失败返源串</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Ency.decy.file(System.String,System.String,System.Boolean)">
            <summary>
            对整个文件进行解密
            </summary>
            <param name="sourceFilePath">解密的源加密文件路径</param>
            <param name="targetFilePath">解密后存放到哪里</param>
            <param name="isDeleteSoruceFile">解密之后是否删除源加密文件</param>
            <returns></returns>
        </member>
        <member name="T:Cocon90.Lib.Util.Ency.ency">
            <summary>
            加密辅助类
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Ency.ency.des(System.String,System.String)">
            <summary>
            DES加密字符串
            </summary>
            <param name="sourceString">待加密的字符串</param>
            <param name="encyKeyUse8Letter">加密密钥,要求为8位</param>
            <returns>加密成功返回加密后的字符串，失败返回源串</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Ency.ency.file(System.String,System.String,System.Boolean)">
            <summary>
            对整个文件执行加密
            </summary>
            <param name="sourceFilePath">源文件路径</param>
            <param name="targetFilePath">目标文件存放路径</param>
            <param name="isDeleteSoruceFile">加密后删源文件否</param>
            <returns></returns>
        </member>
        <member name="T:Cocon90.Lib.Util.GZip.gzipHelper">
            <summary>
            GZIP压缩辅助类
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.GZip.gzipHelper.StringCompress(System.String)">
            <summary>
            压缩字符串
            </summary>
            <param name="strUncompressed">未压缩的字符串</param>
            <returns>压缩的字符串</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.GZip.gzipHelper.StringDeCompress(System.String)">
            <summary>
            解压缩字符串
            </summary>
            <param name="strCompressed">压缩的字符串</param>
            <returns>未压缩的字符串</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.GZip.gzipHelper.CompressFile(System.String,System.String)">
            <summary>
            压缩文件
            </summary>
            <param name="iFile">压缩前文件路径</param>
            <param name="oFile">压缩后文件路径</param>
        </member>
        <member name="M:Cocon90.Lib.Util.GZip.gzipHelper.DecompressFile(System.String,System.String)">
            <summary>
            解压缩文件
            </summary>
            <param name="iFile">压缩前文件路径</param>
            <param name="oFile">压缩后文件路径</param>
        </member>
        <member name="T:Cocon90.Lib.Util.Ini.IniHelper">
            <summary>
            INI文件操作工具
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Ini.IniHelper.Write(System.String,System.String,System.String)">
            <summary>
            写入ini文件
            </summary>
            <param name="section"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Ini.IniHelper.Read(System.String,System.String)">
            <summary>
            从INI中读取
            </summary>
            <param name="section"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Cocon90.Lib.Util.Log.Logger">
            <summary>
            日志记录工具
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Log.Logger.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>The instance.</value>
        </member>
        <member name="M:Cocon90.Lib.Util.Log.Logger.addToLog(System.String)">
            <summary>
            写到日志
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Log.Logger.addToLogHasBreak(System.String)">
            <summary>
            写到日志
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Log.Logger.addToLog(System.Exception)">
            <summary>
            将一个异常添加到日志记录
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Log.Logger.addToLog(System.Exception,System.String)">
            <summary>
            将一个异常添加到日志记录
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Mail.MailSender.sendMail(System.String,System.String,System.String[],System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            发送邮件
            </summary>
            <param name="senderEmail">发送者的源邮箱 如：source@163.com</param>
            <param name="senderEmailPass">发送者的源邮箱对应的密码 如：123456</param>
            <param name="targetEmail">目标邮箱，发送给谁如abcdefg@163.com</param>
            <param name="subject">邮件主题</param>
            <param name="body">邮件正文</param>
            <param name="isBodyHtml">邮件正文是否是Html内容</param>
            <param name="enableSsl">是否使用SSL安全传输</param>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Mail.MailSender.sendMail(System.String,System.String,System.String,System.Int32,System.String[],System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            发送邮件
            </summary>
            <param name="senderEmail">发送者的源邮箱 如：source@163.com</param>
            <param name="senderEmailPass">发送者的源邮箱对应的密码 如：123456</param>
            <param name="targetEmails">目标邮箱，发送给谁如abcdefg@163.com</param>
            <param name="subject">邮件主题</param>
            <param name="body">邮件正文</param>
            <param name="isBodyHtml">邮件正文是否是Html内容</param>
            <param name="enableSsl">是否使用SSL安全传输</param>
            <returns>是否发送成功</returns>
        </member>
        <member name="T:Cocon90.Lib.Util.Parse.parseHelper">
            <summary>
            数据类型安全转换
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Parse.parseHelper.toInt(System.String,System.Int32)">
            <summary>
            默认失败则返回-1
            </summary>
            <param name="num"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Parse.parseHelper.toLong(System.String,System.Int64)">
            <summary>
            默认失败则返回-1
            </summary>
            <param name="num"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Parse.parseHelper.toDouble(System.String,System.Double)">
             <summary>
            默认失败则返回-1.0000d
             </summary>
             <param name="num"></param>
             <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Parse.parseHelper.toFloat(System.String,System.Single)">
            <summary>
            默认失败则返回-1.000f
            </summary>
            <param name="floatString"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Parse.parseHelper.toDateTime(System.String,System.Nullable{System.DateTime})">
            <summary>
            默认转换失败则返回Null
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Parse.parseHelper.toDateTimeLow(System.String)">
            <summary>
            默认转换失败时反回此该起的100年前
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Parse.parseHelper.toDateTimeHigh(System.String)">
            <summary>
             默认转换失败时反回此该起的100年后
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Parse.parseHelper.toBool(System.String)">
            <summary>
            对Bool类型进行转换，boolString为True的语句是："on","1","true","yes" 
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Parse.parseHelper.toFixLength(System.String,System.Int32)">
            <summary>
            将一个数字字符串，转为指定长度的数据字符串，比如：199转为4位长度为：0199,如果是12345转为2位，则为12
            </summary>
            <param name="num"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Parse.parseHelper.toFixLength(System.String,System.Int32,System.Char)">
            <summary>
            将一个字符串，转为指定长度的数据字符串，可以在前面加指定的字符
            </summary>
            <param name="num"></param>
            <param name="length"></param>
            <param name="padChar"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Parse.parseHelper.isNumber(System.String)">
            <summary>
            判断一个数字字符串是否是标准数字(包括正负int，double，decimal)。
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Parse.parseHelper.toReplace(System.String,System.Object,System.String)">
            <summary>
            将itemModel中的属性值替换sourceString中出现的“${属性名(区分大小写)}”的字符串。替换完成后返回。
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Parse.parseHelper.toColor(System.String)">
            <summary>
            将Html中的如#000这样的颜色转为Color对像。
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Parse.parseHelper.toColor(System.Drawing.Color)">
            <summary>
            将Color对像转为Html中的如#000这样的颜色。
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Parse.parseHelper.numberToChinese(System.Int32)">
            <summary>
            将0-99999内的数字转为对应的汉字。
            </summary>
            <param name="num"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Reflect.ReflectHelper.GetPropertyValues(System.Type,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Gets the property values. the key is PropertyName and the value is the parameter obj's value.
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Serialize.binarySerialize">
            <summary>
            二进制序列化辅助类
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Serialize.binarySerialize.Serialize(System.Object)">
            <summary>
            将对像序列化为byte数组
            </summary>
            <param name="modelObject"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Serialize.binarySerialize.SerializeToString(System.Object)">
            <summary>
            将对像序列化为Base64字符串
            </summary>
            <param name="modelObject"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Serialize.binarySerialize.Deserialize(System.Byte[])">
            <summary>
            将序列化后字节数组转为对像。
            </summary>
            <param name="serializeByte"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Serialize.binarySerialize.DeserializeFormString(System.String)">
            <summary>
            将序列化后的BASE64编码字符串转为对像
            </summary>
            <param name="serializeString"></param>
            <returns></returns>
        </member>
        <member name="T:Cocon90.Lib.Util.Sorter.NumberStringSorter">
            <summary>
            排序器，可对如：高一年级、高二年级、高三年级 类似数字进行排序。
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Server.BaseIntervalServer">
            <summary>
            定时执行服务，需要子类实现 
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Server.BaseIntervalServer.IntervalMisseconds">
            <summary>
            获取或设置 间隔多称时间执行一次DoSomeThing方法。
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Server.BaseIntervalServer.#ctor(System.Int64)">
            <summary>
            间隔多少毫秒执行一次
            </summary>
            <param name="intervalMisseconds"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Server.BaseIntervalServer.#ctor(System.Int64,System.Int64)">
            <summary>
            间隔多少毫秒执行一次，和检测的最小单位
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Server.BaseIntervalServer.PerSleepMissecond">
            <summary>
            多长时间检测一次是否停止。
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Server.BaseIntervalServer.IsRunning">
            <summary>
            指示当前服务是否正在运行
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Server.BaseIntervalServer.StartTime">
            <summary>
            指示当前服务的开始执行日期。
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Server.BaseIntervalServer.Count">
            <summary>
            指示当前服务调用了多少次DoSomeThing方法。
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Server.BaseIntervalServer.Start">
            <summary>
            启动服务。
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Server.BaseIntervalServer.DoSomeThing(System.Nullable{System.DateTime},System.Int64)">
            <summary>
            要不断调用的方法。
            </summary>
            <param name="startTime"></param>
            <param name="count"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Server.BaseIntervalServer.Stop">
            <summary>
            停止服务
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Server.IBaseServer">
            <summary>
            表示一个服务。
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Server.IBaseServer.IsRunning">
            <summary>
            获取或设置 服务是否正在运行。
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Server.IBaseServer.Start">
            <summary>
            启动服务
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Server.IBaseServer.Stop">
            <summary>
            停止服务
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Time.bgWorker">
            <summary>
            BackgroundWorker类的辅助类
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Time.bgWorker.ArgumentEntry.ObjectResult">
            <summary>
            存放对像的类Object，不为NULL
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Time.bgWorker.ArgumentEntry.IntResult">
            <summary>
            存放对像的类Int 默认为0
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Time.bgWorker.ArgumentEntry.BoolResult">
            <summary>
            存放对像的类Bool 默认为False
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Time.bgWorker.ArgumentEntry.ObjectList">
            <summary>
            存放对像的集体，不为NULL。
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Time.bgWorker.ArgumentEntry.IList">
            <summary>
            IList类型对像，注意，默认为NULL
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Time.bgWorker.runAsync(Cocon90.Lib.Util.Time.bgWorker.ArgumentDelegate,Cocon90.Lib.Util.Time.bgWorker.ArgumentDelegate)">
            <summary>
            执行新BackgroundWorker实体的RunWorkerAsync方法，doWork内的代码是在多线程中运行的。workCompleted中的代码将会在当前线程中运行。
            </summary>
            <param name="doWork">要使用背景线程做的事情，做完事后，把结果交给doWork的参数ArgumentEntry对像。</param>
            <param name="workCompleted">把结果以ArgumentEntry对像为参数传出来。当前线程去执行workCompleted。</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Time.bgWorker.runAsync``1(System.Func{``0},System.Action{``0})">
            <summary>
            执行新BackgroundWorker实体的RunWorkerAsync方法，doWork内的代码是在多线程中运行的。workCompleted中的代码将会在当前线程中运行
            </summary>
            <typeparam name="T"></typeparam>
            <param name="doWork"></param>
            <param name="workCompleted"></param>
        </member>
        <member name="T:Cocon90.Lib.Util.Time.intervalInvoker">
            <summary>
            用来重复执行某事
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Time.intervalInvoker.DoWork">
            <summary>
            委托，表示要执行的事件。传出当前执行次数。
            </summary>
            <param name="currentCount"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Time.intervalInvoker.Invoke(System.Int32,System.Int32,System.Boolean,Cocon90.Lib.Util.Time.intervalInvoker.DoWork,System.Action)">
            <summary>
            重复每隔interval毫秒执行一次action委托，执行count次后，执行finishAction委托。isActionStart指定是否本方法刚调用就执行一次。
            </summary>
            <param name="interval"></param>
            <param name="count"></param>
            <param name="isActionStart"></param>
            <param name="action"></param>
            <param name="finishAction"></param>
        </member>
        <member name="T:Cocon90.Lib.Util.Time.delayInvoker">
            <summary>
            延时辅助执行类
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Time.delayInvoker.Invoke(System.Int32,System.Action)">
            <summary>
            延时执行指定毫秒，后执行某事。（同一线程内，异步执行）
            </summary>
            <param name="delayMillisecond"></param>
            <param name="action"></param>
        </member>
        <member name="T:Cocon90.Lib.Util.Time.ThreadRepeater">
            <summary>
            使用多线程循环重复执行某事。
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Time.ThreadRepeater.#ctor(System.Action,System.Decimal,System.Decimal)">
            <summary>
            构建一个自动多线程执行类，传入要执行的Action和间隔多长执行一次时间（秒）。
            </summary>
            <param name="action"></param>
            <param name="intervalSecond"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Time.ThreadRepeater.Start">
            <summary>
            开始执行
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Time.ThreadRepeater.Stop">
            <summary>
            停止线程操作
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Time.threadPoolHelper">
            <summary>
            线程池， 允许指定数量的线程在池中运行。
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Time.threadPoolHelper.SetPoolMaxCount(System.Int32)">
            <summary>
            设置线程池最大请求数目
            </summary>
            <param name="maxThreadCount"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Time.threadPoolHelper.SetPoolMinCount(System.Int32)">
            <summary>
            设置线程池中工作的线程数
            </summary>
            <param name="minThreadCount"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Time.threadPoolHelper.GetPoolMaxCount">
            <summary>
            取得线程池最大请求数目
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Time.threadPoolHelper.GetPoolMinCount">
            <summary>
            取得线程池中工作的线程数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Time.threadPoolHelper.GetAvailableCount">
            <summary>
            取得线程池中可用的线程数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Time.threadPoolHelper.DoInvoke(System.Threading.WaitCallback,System.Object)">
            <summary>
            将处理任务加入到线程池中执行。
            </summary>
            <param name="waitCallback"></param>
            <param name="objArgs"></param>
        </member>
        <member name="T:Cocon90.Lib.Util.Time.sequenceInvoker">
            <summary>
            多任务连续执行类
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Time.sequenceInvoker.InvokeSequence(System.Action,System.Action[])">
            <summary>
            同步执行action，并使用异步依次执行invkeFinish
            </summary>
            <param name="action"></param>
            <param name="invokeFinish"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Time.sequenceInvoker.InvokeSequenceAsnync(System.Action,System.Action[])">
            <summary>
            异步执行action，并使用异步依次执行invkeFinish 
            </summary>
            <param name="action"></param>
            <param name="invokeFinish"></param>
        </member>
        <member name="T:Cocon90.Lib.Util.Utility.CacheHelper`1">
            <summary>
            缓存辅助 T为缓存数据的类型
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Utility.CacheHelper`1.IntervalSeconds">
            <summary>
            传入间隔时间
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Utility.CacheHelper`1.#ctor(System.Int32)">
            <summary>
            构建一个缓存辅助类
            </summary>
            <param name="intervalSeconds"></param>
        </member>
        <member name="P:Cocon90.Lib.Util.Utility.CacheHelper`1.CacheData">
            <summary>
            缓冲数据字典
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Utility.CacheHelper`1.UpdateCache(System.String,`0)">
            <summary>
            更新数据到缓存,如果没有，则创建
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Utility.CacheHelper`1.ReadCache(System.String,Cocon90.Lib.Util.Utility.CacheHelper{`0}.GenerateDataDelegate)">
            <summary>
            数据取缓存，如果有缓冲中有数据且时间小于IntervalSeconds则取缓冲，否则通过generateDataMethod的返回值取得数据并存起来。
            </summary>
            <param name="key"></param>
            <param name="generateDataMethod"></param>
            <returns></returns>
        </member>
        <member name="T:Cocon90.Lib.Util.Utility.CacheHelper`1.GenerateDataDelegate">
            <summary>
            返回数据的委托
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cocon90.Lib.Util.Utility.CacheHelper`1.CacheModel`1">
            <summary>
            缓存数据实体
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Utility.CacheHelper`1.CacheModel`1.CacheId">
            <summary>
            缓存实体的唯一标记
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Utility.CacheHelper`1.CacheModel`1.Data">
            <summary>
            缓存的数据
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Utility.CacheHelper`1.CacheModel`1.UpdateTime">
            <summary>
            最近一次更新日期
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Utility.TextFormat">
            <summary>
            将UTF8编码的文本文档中的内容，按行读出，每行中以|分隔的内容，将作为数组。
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Utility.Splitter`1">
            <summary>
            通用分支器
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Utility.Splitter`1.Filter">
            <summary>
            分支选择过滤器
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Utility.Splitter`1.SplitterDictionary">
            <summary>
            分支器字典
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Utility.compareHelper">
            <summary>
            比较两具元素是的辅助类
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Utility.compareHelper.arrayCompare(System.Array,System.Array)">
            <summary>
            比较两个数组的元素是否一一对应且相同。
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Utility.eventHelper">
            <summary>
            事件委托辅助类
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Utility.eventHelper.notifyEvent(System.Action)">
            <summary>
            通知事件。传入Null时不通知。
            </summary>
            <param name="action"></param>
        </member>
        <member name="T:Cocon90.Lib.Util.Utility.regexHelper">
            <summary>
            正则表达式辅助类
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Utility.regexHelper.checkIP(System.String)">
            <summary>
            正规则试验IP地址
            </summary>
            <param name="IP"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Utility.regexHelper.isNullOrEmpty(System.String)">
            <summary>
            判断一个字符串是否是NULL或者是空格组成的字符串或者是空字符串。
            </summary>
            <param name="oldString"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Utility.regexHelper.trimEmpty(System.String)">
            <summary>
            返回一个字符串对像的字符形式。如传入NULL则返回空字符串。
            </summary>
            <param name="oldString"></param>
            <returns></returns>
        </member>
        <member name="T:Cocon90.Lib.Util.Utility.cloneHelper`1">
            <summary>
            克隆辅助类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cocon90.Lib.Util.Utility.cloneHelper`1.CloneModel(`0,System.Boolean)">
            <summary>
            克隆模型 取得新实例。
            </summary>
            <param name="sourceModel"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Utility.cloneHelper`1.CloneToSonModel(System.Object,System.Boolean)">
            <summary>
            克隆到子类
            </summary>
            <param name="superModel"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Utility.cloneHelper`1.CloneToSonModelList(System.Collections.IList,System.Boolean)">
            <summary>
            超类集合 克隆到 子类集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Utility.cloneHelper`1.CloneToSuperModelList(System.Collections.IList,System.Boolean)">
            <summary>
            子类集合 克隆到 超类集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Utility.cloneHelper`1.CloneToSuperModel(System.Object,System.Boolean)">
            <summary>
            克隆到超类
            </summary>
            <param name="sonModel"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Utility.cloneHelper`1.Clone(`0,`0,System.Boolean)">
            <summary>
            将fromModel中的可读可写属性值赋给toModel，第三参isNullClone表示是否将fromModel中的Null一块克隆过去，如果值为null则不克隆该属性
            </summary>
            <param name="fromModel"></param>
            <param name="toModel"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Utility.cloneHelper`1.ClonePropertyToList(System.Collections.IList,System.String,Cocon90.Lib.Util.Utility.cloneHelper{`0}.HandlerPropertyDelegate)">
            <summary>
            将modelList中的实体的指定属性复制到T类型的List集体中并返回。
            </summary>
            <param name="modelList"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="T:Cocon90.Lib.Util.Utility.cloneHelper`1.HandlerPropertyDelegate">
            <summary>
            属性加工处理函数
            </summary>
            <param name="propertyValue"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Utility.cloneHelper.Clone(System.Object,System.Object,System.Boolean)">
            <summary>
            将fromModel中的可读可写属性值赋给toModel，第三参isNullClone表示是否将fromModel中的Null一块克隆过去，如果值为null则不克隆该属性
            </summary>
            <param name="fromModel"></param>
            <param name="toModel"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Utility.uiHelper`1.getModelFromUI(System.Windows.Forms.Control)">
            <summary>
            将界面上controlPanel容器内的控件值付给T实体并反回。
            1、如果实器内的控件为Label则自动跳过不处理。
            2、如果容器内的控件的Name和实体中的属性值相同(不区分大小写)，则自动取其Text属性并赋给实体；
            3、如果容器内的控件Name是以：实体属性名+"控件属性名"名称，则自动取期该属性然后赋给实体；如果是常见8种数据类型和DateTime类型，则进行数据转换后再赋值，如果转换失败，则使用Tag中的值，若Tag中的值也转换失败，则使用0或DateTime.Now做为默认值
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Utility.uiHelper`1.setModelToUI(System.Windows.Forms.Control,`0)">
            <summary>
            将model的属性值付给界面上controlPanel容器内的控件。
            1、如果实器内的控件为Label则自动跳过不处理。
            2、如果容器内的控件的Name和实体中的属性值相同(不区分大小写)，则自动给其Text属性赋；
            3、如果容器内的控件Name是以：实体属性名+"控件属性名"名称，则自动赋值给该属性；如果控件的属性值是常见8种数据类型和DateTime类型，则进行数据转换后再赋值，如果转换失败，则使用Tag中的值，若Tag中的值也转换失败，则使用0或DateTime.Now做为默认值
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Request.requestHelper">
            <summary>
            请求辅助功能
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Request.requestHelper.OpenRead(System.String,System.Net.OpenReadCompletedEventHandler)">
            <summary>
            开始向此URL发请求（自动将使用异常读取的方式），请求完成后调用readComplted（2参数）委托
            </summary>
            <param name="url"></param>
            <param name="readComplted"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Request.requestHelper.PostFile(System.String,System.String,System.Net.UploadFileCompletedEventHandler)">
            <summary>
            异步上传文件到到指定的Url页面。其中filePath为本地文件全路径，uploadFinish表示发送成功时执行的委托
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Request.requestHelper.Cookie">
            <summary>
            获取或设置当前的请求的Cookie容器。
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.API.apiHelper">
            <summary>
            Window常用Api收集辅助
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.API.apiHelper.GetWindowWallpaper">
            <summary>
            获取当前Windows的桌面壁纸
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.RunManager">
             <summary>
            开机自动运行的辅助类
             </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.RunManager.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="executablePath">启动了应用程序的可执行文件的路径，包括可执行文件的名称</param>
        </member>
        <member name="P:Cocon90.Lib.Util.Window.RunManager.ExecutablePath">
            <summary>
            获得或设置启动了应用程序的可执行文件的路径，包括可执行文件的名称
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Window.RunManager.RunAtStartUp">
            <summary>
            获取或设置程序是否开机启动
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.CameraClass">
            <summary>
            常规类摄像头辅助类
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.CameraClass.#ctor(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            初始化摄像头
            </summary>
            <param name="handle">控件的句柄</param>
            <param name="left">开始显示的左边距</param>
            <param name="top">开始显示的上边距</param>
            <param name="width">显示的宽度</param>
            <param name="height">显示的高度</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.CameraClass.Start">
            <summary>
            开始显示视频
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.CameraClass.Stop">
            <summary>
            停止视频
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.CameraClass.SaveImage(System.String)">
            <summary>
            截取当前图片为Bmp格式
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.CameraClass.StartRecord(System.String)">
            
             录像
            
             要保存avi文件的路径
        </member>
        <member name="M:Cocon90.Lib.Util.Window.CameraClass.StopRecord">
            
             停止录像
            
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Device.deviceInfoHelper">
            <summary>
            硬件信息获取辅助
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Device.deviceInfoHelper.GetBIOSSerialNumber">
            <summary>
            获取主板序列号
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Device.deviceInfoHelper.GetCPUSerialNumber">
            <summary>
            获取CPU序列号
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Device.deviceInfoHelper.GetHardDiskSerialNumber">
            <summary>
            获取硬盘序列号
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Device.deviceInfoHelper.GetNetCardMACAddress">
            <summary>
            获取网卡地址
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Hook.Common.MouseHook">
            <summary>
            鼠标钩子
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Hook.Common.MouseHook.#ctor">
            <summary>
            鼠标钩子
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Hook.Common.KeyboardHook">
            <summary>
            键盘钩子
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Hook.Common.KeyboardHook.#ctor">
            <summary>
            键盘钩子
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Hook.Common.GlobalHook">
            <summary>
            表示一个钩子，抽象类
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Hook.KeyboardApi">
            <summary>
            键盘操作辅助类（使用键盘钩子）
            </summary>  
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Hook.KeyboardApi.KeyboardEventHandler">
            <summary>
            键盘事件的委托
            </summary>
            <param name="keyEvent"></param>
            <param name="key"></param>
        </member>
        <member name="E:Cocon90.Lib.Util.Window.Hook.KeyboardApi.KeyboardEvent">
            <summary>
            键盘事件
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Hook.KeyboardApi.#ctor">
            <summary>
            实倒化一个键盘钩子
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Hook.KeyboardApi.SetHook">
            <summary>
            安装钩子 返回是否安装成功
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Hook.KeyboardApi.UnHook">
            <summary>
            卸载钩子 返回是否卸载成功
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Hook.KeyboardApi.KeyboardEvents">
            <summary>
            键盘按键动作枚举
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Hook.MouseApi">
            <summary>
            使用WindowAPI来操控鼠标，如果要移动鼠标，请使用WinForm中的Cursor.Position=new Point(X,Y);
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Hook.RamGecTools.KeyboardHook">
            <summary>
            Class for intercepting low level keyboard hooks
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Hook.RamGecTools.KeyboardHook.VKeys">
            <summary>
            Virtual Keys
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Hook.RamGecTools.KeyboardHook.KeyboardHookHandler">
            <summary>
            Internal callback processing function
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Hook.RamGecTools.KeyboardHook.KeyboardHookCallback">
            <summary>
            Function that will be called when defined events occur
            </summary>
            <param name="key">VKeys</param>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Hook.RamGecTools.KeyboardHook.hookID">
            <summary>
            Hook ID
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Hook.RamGecTools.KeyboardHook.Install">
            <summary>
            Install low level keyboard hook
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Hook.RamGecTools.KeyboardHook.Uninstall">
            <summary>
            Remove low level keyboard hook
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Hook.RamGecTools.KeyboardHook.SetHook(Cocon90.Lib.Util.Window.Hook.RamGecTools.KeyboardHook.KeyboardHookHandler)">
            <summary>
            Registers hook with Windows API
            </summary>
            <param name="proc">Callback function</param>
            <returns>Hook ID</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Hook.RamGecTools.KeyboardHook.HookFunc(System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Default hook call, which analyses pressed keys
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Hook.RamGecTools.KeyboardHook.Finalize">
            <summary>
            Destructor. Unhook current hook
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Hook.RamGecTools.KeyboardHook.WM_KEYDOWN">
            <summary>
            Low-Level function declarations
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Hook.RamGecTools.MouseHook">
            <summary>
            Class for intercepting low level Windows mouse hooks.
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Hook.RamGecTools.MouseHook.MouseHookHandler">
            <summary>
            Internal callback processing function
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Hook.RamGecTools.MouseHook.MouseHookCallback">
            <summary>
            Function to be called when defined even occurs
            </summary>
            <param name="mouseStruct">MSLLHOOKSTRUCT mouse structure</param>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Hook.RamGecTools.MouseHook.hookID">
            <summary>
            Low level mouse hook's ID
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Hook.RamGecTools.MouseHook.Install">
            <summary>
            Install low level mouse hook
            </summary>
            <param name="mouseHookCallbackFunc">Callback function</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Hook.RamGecTools.MouseHook.Uninstall">
            <summary>
            Remove low level mouse hook
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Hook.RamGecTools.MouseHook.Finalize">
            <summary>
            Destructor. Unhook current hook
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Hook.RamGecTools.MouseHook.SetHook(Cocon90.Lib.Util.Window.Hook.RamGecTools.MouseHook.MouseHookHandler)">
            <summary>
            Sets hook and assigns its ID for tracking
            </summary>
            <param name="proc">Internal callback function</param>
            <returns>Hook ID</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Hook.RamGecTools.MouseHook.HookFunc(System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Callback function
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputDeviceStateAdaptor">
            <summary>
            The contract for a service that interprets the state of input devices.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputDeviceStateAdaptor.IsKeyDown(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Determines whether the specified key is up or down.
            </summary>
            <param name="keyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/> for the key.</param>
            <returns>
            	<c>true</c> if the key is down; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputDeviceStateAdaptor.IsKeyUp(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Determines whether the specified key is up or down.
            </summary>
            <param name="keyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/> for the key.</param>
            <returns>
            	<c>true</c> if the key is up; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputDeviceStateAdaptor.IsHardwareKeyDown(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Determines whether the physical key is up or down at the time the function is called regardless of whether the application thread has read the keyboard event from the message pump.
            </summary>
            <param name="keyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/> for the key.</param>
            <returns>
            	<c>true</c> if the key is down; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputDeviceStateAdaptor.IsHardwareKeyUp(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Determines whether the physical key is up or down at the time the function is called regardless of whether the application thread has read the keyboard event from the message pump.
            </summary>
            <param name="keyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/> for the key.</param>
            <returns>
            	<c>true</c> if the key is up; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputDeviceStateAdaptor.IsTogglingKeyInEffect(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Determines whether the toggling key is toggled on (in-effect) or not.
            </summary>
            <param name="keyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/> for the key.</param>
            <returns>
            	<c>true</c> if the toggling key is toggled on (in-effect); otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputMessageDispatcher">
            <summary>
            The contract for a service that dispatches <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages to the appropriate destination.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputMessageDispatcher.DispatchInput(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT[])">
            <summary>
            Dispatches the specified list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages in their specified order.
            </summary>
            <param name="inputs">The list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages to be dispatched.</param>
            <exception cref="T:System.ArgumentException">If the <paramref name="inputs"/> array is empty.</exception>
            <exception cref="T:System.ArgumentNullException">If the <paramref name="inputs"/> array is null.</exception>
            <exception cref="T:System.Exception">If the any of the commands in the <paramref name="inputs"/> array could not be sent successfully.</exception>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputSimulator">
            <summary>
            The contract for a service that simulates Keyboard and Mouse input and Hardware Input Device state detection for the Windows Platform.
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputSimulator.Keyboard">
            <summary>
            Gets the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator"/> instance for simulating Keyboard input.
            </summary>
            <value>The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator"/> instance.</value>
        </member>
        <member name="P:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputSimulator.Mouse">
            <summary>
            Gets the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator"/> instance for simulating Mouse input.
            </summary>
            <value>The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator"/> instance.</value>
        </member>
        <member name="P:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputSimulator.InputDeviceState">
            <summary>
            Gets the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputDeviceStateAdaptor"/> instance for determining the state of the various input devices.
            </summary>
            <value>The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputDeviceStateAdaptor"/> instance.</value>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator">
            <summary>
            The service contract for a keyboard simulator for the Windows platform.
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator.Mouse">
            <summary>
            Gets the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator"/> instance for simulating Mouse input.
            </summary>
            <value>The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator"/> instance.</value>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator.KeyDown(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Simulates the key down gesture for the specified key.
            </summary>
            <param name="keyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/> for the key.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator.KeyPress(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Simulates the key press gesture for the specified key.
            </summary>
            <param name="keyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/> for the key.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator.KeyPress(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode[])">
            <summary>
            Simulates a key press for each of the specified key codes in the order they are specified.
            </summary>
            <param name="keyCodes"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator.KeyUp(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Simulates the key up gesture for the specified key.
            </summary>
            <param name="keyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/> for the key.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator.ModifiedKeyStroke(System.Collections.Generic.IEnumerable{Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode},System.Collections.Generic.IEnumerable{Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode})">
            <summary>
            Simulates a modified keystroke where there are multiple modifiers and multiple keys like CTRL-ALT-K-C where CTRL and ALT are the modifierKeys and K and C are the keys.
            The flow is Modifiers KeyDown in order, Keys Press in order, Modifiers KeyUp in reverse order.
            </summary>
            <param name="modifierKeyCodes">The list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/>s for the modifier keys.</param>
            <param name="keyCodes">The list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/>s for the keys to simulate.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator.ModifiedKeyStroke(System.Collections.Generic.IEnumerable{Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode},Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Simulates a modified keystroke where there are multiple modifiers and one key like CTRL-ALT-C where CTRL and ALT are the modifierKeys and C is the key.
            The flow is Modifiers KeyDown in order, Key Press, Modifiers KeyUp in reverse order.
            </summary>
            <param name="modifierKeyCodes">The list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/>s for the modifier keys.</param>
            <param name="keyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/> for the key.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator.ModifiedKeyStroke(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode,System.Collections.Generic.IEnumerable{Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode})">
            <summary>
            Simulates a modified keystroke where there is one modifier and multiple keys like CTRL-K-C where CTRL is the modifierKey and K and C are the keys.
            The flow is Modifier KeyDown, Keys Press in order, Modifier KeyUp.
            </summary>
            <param name="modifierKey">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/> for the modifier key.</param>
            <param name="keyCodes">The list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/>s for the keys to simulate.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator.ModifiedKeyStroke(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode,Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Simulates a simple modified keystroke like CTRL-C where CTRL is the modifierKey and C is the key.
            The flow is Modifier KeyDown, Key Press, Modifier KeyUp.
            </summary>
            <param name="modifierKeyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/> for the  modifier key.</param>
            <param name="keyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/> for the key.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator.TextEntry(System.String)">
            <summary>
            Simulates uninterrupted text entry via the keyboard.
            </summary>
            <param name="text">The text to be simulated.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator.TextEntry(System.Char)">
            <summary>
            Simulates a single character text entry via the keyboard.
            </summary>
            <param name="character">The unicode character to be simulated.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator.Sleep(System.Int32)">
            <summary>
            Sleeps the executing thread to create a pause between simulated inputs.
            </summary>
            <param name="millsecondsTimeout">The number of milliseconds to wait.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator.Sleep(System.TimeSpan)">
            <summary>
            Sleeps the executing thread to create a pause between simulated inputs.
            </summary>
            <param name="timeout">The time to wait.</param>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator">
            <summary>
            The service contract for a mouse simulator for the Windows platform.
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator.Keyboard">
            <summary>
            Gets the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator"/> instance for simulating Keyboard input.
            </summary>
            <value>The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator"/> instance.</value>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator.MoveMouseBy(System.Int32,System.Int32)">
            <summary>
            Simulates mouse movement by the specified distance measured as a delta from the current mouse location in pixels.
            </summary>
            <param name="pixelDeltaX">The distance in pixels to move the mouse horizontally.</param>
            <param name="pixelDeltaY">The distance in pixels to move the mouse vertically.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator.MoveMouseTo(System.Double,System.Double)">
            <summary>
            Simulates mouse movement to the specified location on the primary display device.
            </summary>
            <param name="absoluteX">The destination's absolute X-coordinate on the primary display device where 0 is the extreme left hand side of the display device and 65535 is the extreme right hand side of the display device.</param>
            <param name="absoluteY">The destination's absolute Y-coordinate on the primary display device where 0 is the top of the display device and 65535 is the bottom of the display device.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator.MoveMouseToPositionOnVirtualDesktop(System.Double,System.Double)">
            <summary>
            Simulates mouse movement to the specified location on the Virtual Desktop which includes all active displays.
            </summary>
            <param name="absoluteX">The destination's absolute X-coordinate on the virtual desktop where 0 is the left hand side of the virtual desktop and 65535 is the extreme right hand side of the virtual desktop.</param>
            <param name="absoluteY">The destination's absolute Y-coordinate on the virtual desktop where 0 is the top of the virtual desktop and 65535 is the bottom of the virtual desktop.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator.LeftButtonDown">
            <summary>
            Simulates a mouse left button down gesture.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator.LeftButtonUp">
            <summary>
            Simulates a mouse left button up gesture.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator.LeftButtonClick">
            <summary>
            Simulates a mouse left button click gesture.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator.LeftButtonDoubleClick">
            <summary>
            Simulates a mouse left button double-click gesture.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator.RightButtonDown">
            <summary>
            Simulates a mouse right button down gesture.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator.RightButtonUp">
            <summary>
            Simulates a mouse right button up gesture.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator.RightButtonClick">
            <summary>
            Simulates a mouse right button click gesture.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator.RightButtonDoubleClick">
            <summary>
            Simulates a mouse right button double-click gesture.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator.XButtonDown(System.Int32)">
            <summary>
            Simulates a mouse X button down gesture.
            </summary>
            <param name="buttonId">The button id.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator.XButtonUp(System.Int32)">
            <summary>
            Simulates a mouse X button up gesture.
            </summary>
            <param name="buttonId">The button id.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator.XButtonClick(System.Int32)">
            <summary>
            Simulates a mouse X button click gesture.
            </summary>
            <param name="buttonId">The button id.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator.XButtonDoubleClick(System.Int32)">
            <summary>
            Simulates a mouse X button double-click gesture.
            </summary>
            <param name="buttonId">The button id.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator.VerticalScroll(System.Int32)">
            <summary>
            Simulates mouse vertical wheel scroll gesture.
            </summary>
            <param name="scrollAmountInClicks">The amount to scroll in clicks. A positive value indicates that the wheel was rotated forward, away from the user; a negative value indicates that the wheel was rotated backward, toward the user.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator.HorizontalScroll(System.Int32)">
            <summary>
            Simulates a mouse horizontal wheel scroll gesture. Supported by Windows Vista and later.
            </summary>
            <param name="scrollAmountInClicks">The amount to scroll in clicks. A positive value indicates that the wheel was rotated to the right; a negative value indicates that the wheel was rotated to the left.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator.Sleep(System.Int32)">
            <summary>
            Sleeps the executing thread to create a pause between simulated inputs.
            </summary>
            <param name="millsecondsTimeout">The number of milliseconds to wait.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator.Sleep(System.TimeSpan)">
            <summary>
            Sleeps the executing thread to create a pause between simulated inputs.
            </summary>
            <param name="timeout">The time to wait.</param>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder">
            <summary>
            A helper class for building a list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages ready to be sent to the native Windows API.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder._inputList">
            <summary>
            The public list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages being built by this instance.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder"/> class.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.ToArray">
            <summary>
            Returns the list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages as a <see cref="T:System.Array"/> of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages.
            </summary>
            <returns>The <see cref="T:System.Array"/> of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages.</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> at the specified position.
            </summary>
            <value>The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> message at the specified position.</value>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.IsExtendedKey(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Determines if the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/> is an ExtendedKey
            </summary>
            <param name="keyCode">The key code.</param>
            <returns>true if the key code is an extended key; otherwise, false.</returns>
            <remarks>
            The extended keys consist of the ALT and CTRL keys on the right-hand side of the keyboard; the INS, DEL, HOME, END, PAGE UP, PAGE DOWN, and arrow keys in the clusters to the left of the numeric keypad; the NUM LOCK key; the BREAK (CTRL+PAUSE) key; the PRINT SCRN key; and the divide (/) and ENTER keys in the numeric keypad.
            
            See http://msdn.microsoft.com/en-us/library/ms646267(v=vs.85).aspx Section "Extended-Key Flag"
            </remarks>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.AddKeyDown(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Adds a key down to the list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages.
            </summary>
            <param name="keyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/>.</param>
            <returns>This <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder"/> instance.</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.AddKeyUp(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Adds a key up to the list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages.
            </summary>
            <param name="keyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/>.</param>
            <returns>This <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder"/> instance.</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.AddKeyPress(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Adds a key press to the list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages which is equivalent to a key down followed by a key up.
            </summary>
            <param name="keyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/>.</param>
            <returns>This <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder"/> instance.</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.AddCharacter(System.Char)">
            <summary>
            Adds the character to the list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages.
            </summary>
            <param name="character">The <see cref="T:System.Char"/> to be added to the list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages.</param>
            <returns>This <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder"/> instance.</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.AddCharacters(System.Collections.Generic.IEnumerable{System.Char})">
            <summary>
            Adds all of the characters in the specified <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.Char"/>.
            </summary>
            <param name="characters">The characters to add.</param>
            <returns>This <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder"/> instance.</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.AddCharacters(System.String)">
            <summary>
            Adds the characters in the specified <see cref="T:System.String"/>.
            </summary>
            <param name="characters">The string of <see cref="T:System.Char"/> to add.</param>
            <returns>This <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder"/> instance.</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.AddRelativeMouseMovement(System.Int32,System.Int32)">
            <summary>
            Moves the mouse relative to its current position.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns>This <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder"/> instance.</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.AddAbsoluteMouseMovement(System.Int32,System.Int32)">
            <summary>
            Move the mouse to an absolute position.
            </summary>
            <param name="absoluteX"></param>
            <param name="absoluteY"></param>
            <returns>This <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder"/> instance.</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.AddAbsoluteMouseMovementOnVirtualDesktop(System.Int32,System.Int32)">
            <summary>
            Move the mouse to the absolute position on the virtual desktop.
            </summary>
            <param name="absoluteX"></param>
            <param name="absoluteY"></param>
            <returns>This <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder"/> instance.</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.AddMouseButtonDown(Cocon90.Lib.Util.Window.Input.InputSimulator.MouseButton)">
            <summary>
            Adds a mouse button down for the specified button.
            </summary>
            <param name="button"></param>
            <returns>This <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder"/> instance.</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.AddMouseXButtonDown(System.Int32)">
            <summary>
            Adds a mouse button down for the specified button.
            </summary>
            <param name="xButtonId"></param>
            <returns>This <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder"/> instance.</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.AddMouseButtonUp(Cocon90.Lib.Util.Window.Input.InputSimulator.MouseButton)">
            <summary>
            Adds a mouse button up for the specified button.
            </summary>
            <param name="button"></param>
            <returns>This <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder"/> instance.</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.AddMouseXButtonUp(System.Int32)">
            <summary>
            Adds a mouse button up for the specified button.
            </summary>
            <param name="xButtonId"></param>
            <returns>This <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder"/> instance.</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.AddMouseButtonClick(Cocon90.Lib.Util.Window.Input.InputSimulator.MouseButton)">
            <summary>
            Adds a single click of the specified button.
            </summary>
            <param name="button"></param>
            <returns>This <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder"/> instance.</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.AddMouseXButtonClick(System.Int32)">
            <summary>
            Adds a single click of the specified button.
            </summary>
            <param name="xButtonId"></param>
            <returns>This <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder"/> instance.</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.AddMouseButtonDoubleClick(Cocon90.Lib.Util.Window.Input.InputSimulator.MouseButton)">
            <summary>
            Adds a double click of the specified button.
            </summary>
            <param name="button"></param>
            <returns>This <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder"/> instance.</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.AddMouseXButtonDoubleClick(System.Int32)">
            <summary>
            Adds a double click of the specified button.
            </summary>
            <param name="xButtonId"></param>
            <returns>This <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder"/> instance.</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.AddMouseVerticalWheelScroll(System.Int32)">
            <summary>
            Scroll the vertical mouse wheel by the specified amount.
            </summary>
            <param name="scrollAmount"></param>
            <returns>This <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder"/> instance.</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder.AddMouseHorizontalWheelScroll(System.Int32)">
            <summary>
            Scroll the horizontal mouse wheel by the specified amount.
            </summary>
            <param name="scrollAmount"></param>
            <returns>This <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputBuilder"/> instance.</returns>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputSimulator">
            <summary>
            Implements the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputSimulator"/> interface to simulate Keyboard and Mouse input and provide the state of those input devices.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.InputSimulator._keyboardSimulator">
            <summary>
            The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator"/> instance to use for simulating keyboard input.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.InputSimulator._mouseSimulator">
            <summary>
            The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator"/> instance to use for simulating mouse input.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.InputSimulator._inputDeviceState">
            <summary>
            The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputDeviceStateAdaptor"/> instance to use for interpreting the state of the input devices.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputSimulator.#ctor(Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator,Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator,Cocon90.Lib.Util.Window.Input.InputSimulator.IInputDeviceStateAdaptor)">
            <summary>
            Initializes a new instance of the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputSimulator"/> class using the specified <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator"/>, <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator"/> and <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputDeviceStateAdaptor"/> instances.
            </summary>
            <param name="keyboardSimulator">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator"/> instance to use for simulating keyboard input.</param>
            <param name="mouseSimulator">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator"/> instance to use for simulating mouse input.</param>
            <param name="inputDeviceStateAdaptor">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputDeviceStateAdaptor"/> instance to use for interpreting the state of input devices.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.InputSimulator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.InputSimulator"/> class using the default <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.KeyboardSimulator"/>, <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator"/> and <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.WindowsInputDeviceStateAdaptor"/> instances.
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Window.Input.InputSimulator.InputSimulator.Keyboard">
            <summary>
            Gets the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator"/> instance for simulating Keyboard input.
            </summary>
            <value>The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator"/> instance.</value>
        </member>
        <member name="P:Cocon90.Lib.Util.Window.Input.InputSimulator.InputSimulator.Mouse">
            <summary>
            Gets the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator"/> instance for simulating Mouse input.
            </summary>
            <value>The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator"/> instance.</value>
        </member>
        <member name="P:Cocon90.Lib.Util.Window.Input.InputSimulator.InputSimulator.InputDeviceState">
            <summary>
            Gets the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputDeviceStateAdaptor"/> instance for determining the state of the various input devices.
            </summary>
            <value>The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputDeviceStateAdaptor"/> instance.</value>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.KeyboardSimulator">
            <summary>
            Implements the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator"/> interface by calling the an <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputMessageDispatcher"/> to simulate Keyboard gestures.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.KeyboardSimulator._messageDispatcher">
            <summary>
            The instance of the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputMessageDispatcher"/> to use for dispatching <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.KeyboardSimulator.#ctor(Cocon90.Lib.Util.Window.Input.InputSimulator.IInputSimulator)">
            <summary>
            Initializes a new instance of the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.KeyboardSimulator"/> class using an instance of a <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.WindowsInputMessageDispatcher"/> for dispatching <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages.
            </summary>
            <param name="inputSimulator">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputSimulator"/> that owns this instance.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.KeyboardSimulator.#ctor(Cocon90.Lib.Util.Window.Input.InputSimulator.IInputSimulator,Cocon90.Lib.Util.Window.Input.InputSimulator.IInputMessageDispatcher)">
            <summary>
            Initializes a new instance of the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.KeyboardSimulator"/> class using the specified <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputMessageDispatcher"/> for dispatching <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages.
            </summary>
            <param name="inputSimulator">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputSimulator"/> that owns this instance.</param>
            <param name="messageDispatcher">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputMessageDispatcher"/> to use for dispatching <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages.</param>
            <exception cref="T:System.InvalidOperationException">If null is passed as the <paramref name="messageDispatcher"/>.</exception>
        </member>
        <member name="P:Cocon90.Lib.Util.Window.Input.InputSimulator.KeyboardSimulator.Mouse">
            <summary>
            Gets the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator"/> instance for simulating Mouse input.
            </summary>
            <value>The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator"/> instance.</value>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.KeyboardSimulator.SendSimulatedInput(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT[])">
            <summary>
            Sends the list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages using the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputMessageDispatcher"/> instance.
            </summary>
            <param name="inputList">The <see cref="T:System.Array"/> of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages to send.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.KeyboardSimulator.KeyDown(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Calls the Win32 SendInput method to simulate a KeyDown.
            </summary>
            <param name="keyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/> to press</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.KeyboardSimulator.KeyUp(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Calls the Win32 SendInput method to simulate a KeyUp.
            </summary>
            <param name="keyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/> to lift up</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.KeyboardSimulator.KeyPress(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Calls the Win32 SendInput method with a KeyDown and KeyUp message in the same input sequence in order to simulate a Key PRESS.
            </summary>
            <param name="keyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/> to press</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.KeyboardSimulator.KeyPress(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode[])">
            <summary>
            Simulates a key press for each of the specified key codes in the order they are specified.
            </summary>
            <param name="keyCodes"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.KeyboardSimulator.ModifiedKeyStroke(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode,Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Simulates a simple modified keystroke like CTRL-C where CTRL is the modifierKey and C is the key.
            The flow is Modifier KeyDown, Key Press, Modifier KeyUp.
            </summary>
            <param name="modifierKeyCode">The modifier key</param>
            <param name="keyCode">The key to simulate</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.KeyboardSimulator.ModifiedKeyStroke(System.Collections.Generic.IEnumerable{Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode},Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Simulates a modified keystroke where there are multiple modifiers and one key like CTRL-ALT-C where CTRL and ALT are the modifierKeys and C is the key.
            The flow is Modifiers KeyDown in order, Key Press, Modifiers KeyUp in reverse order.
            </summary>
            <param name="modifierKeyCodes">The list of modifier keys</param>
            <param name="keyCode">The key to simulate</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.KeyboardSimulator.ModifiedKeyStroke(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode,System.Collections.Generic.IEnumerable{Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode})">
            <summary>
            Simulates a modified keystroke where there is one modifier and multiple keys like CTRL-K-C where CTRL is the modifierKey and K and C are the keys.
            The flow is Modifier KeyDown, Keys Press in order, Modifier KeyUp.
            </summary>
            <param name="modifierKey">The modifier key</param>
            <param name="keyCodes">The list of keys to simulate</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.KeyboardSimulator.ModifiedKeyStroke(System.Collections.Generic.IEnumerable{Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode},System.Collections.Generic.IEnumerable{Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode})">
            <summary>
            Simulates a modified keystroke where there are multiple modifiers and multiple keys like CTRL-ALT-K-C where CTRL and ALT are the modifierKeys and K and C are the keys.
            The flow is Modifiers KeyDown in order, Keys Press in order, Modifiers KeyUp in reverse order.
            </summary>
            <param name="modifierKeyCodes">The list of modifier keys</param>
            <param name="keyCodes">The list of keys to simulate</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.KeyboardSimulator.TextEntry(System.String)">
            <summary>
            Calls the Win32 SendInput method with a stream of KeyDown and KeyUp messages in order to simulate uninterrupted text entry via the keyboard.
            </summary>
            <param name="text">The text to be simulated.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.KeyboardSimulator.TextEntry(System.Char)">
            <summary>
            Simulates a single character text entry via the keyboard.
            </summary>
            <param name="character">The unicode character to be simulated.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.KeyboardSimulator.Sleep(System.Int32)">
            <summary>
            Sleeps the executing thread to create a pause between simulated inputs.
            </summary>
            <param name="millsecondsTimeout">The number of milliseconds to wait.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.KeyboardSimulator.Sleep(System.TimeSpan)">
            <summary>
            Sleeps the executing thread to create a pause between simulated inputs.
            </summary>
            <param name="timeout">The time to wait.</param>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseButton">
            <summary>
            The mouse button
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseButton.LeftButton">
            <summary>
            Left mouse button
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseButton.MiddleButton">
            <summary>
            Middle mouse button
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseButton.RightButton">
            <summary>
            Right moust button
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator">
            <summary>
            Implements the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IMouseSimulator"/> interface by calling the an <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputMessageDispatcher"/> to simulate Mouse gestures.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator._messageDispatcher">
            <summary>
            The instance of the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputMessageDispatcher"/> to use for dispatching <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.#ctor(Cocon90.Lib.Util.Window.Input.InputSimulator.IInputSimulator)">
            <summary>
            Initializes a new instance of the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator"/> class using an instance of a <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.WindowsInputMessageDispatcher"/> for dispatching <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages.
            </summary>
            <param name="inputSimulator">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputSimulator"/> that owns this instance.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.#ctor(Cocon90.Lib.Util.Window.Input.InputSimulator.IInputSimulator,Cocon90.Lib.Util.Window.Input.InputSimulator.IInputMessageDispatcher)">
            <summary>
            Initializes a new instance of the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator"/> class using the specified <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputMessageDispatcher"/> for dispatching <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages.
            </summary>
            <param name="inputSimulator">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputSimulator"/> that owns this instance.</param>
            <param name="messageDispatcher">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputMessageDispatcher"/> to use for dispatching <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages.</param>
            <exception cref="T:System.InvalidOperationException">If null is passed as the <paramref name="messageDispatcher"/>.</exception>
        </member>
        <member name="P:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.Keyboard">
            <summary>
            Gets the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator"/> instance for simulating Keyboard input.
            </summary>
            <value>The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IKeyboardSimulator"/> instance.</value>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.SendSimulatedInput(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT[])">
            <summary>
            Sends the list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages using the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputMessageDispatcher"/> instance.
            </summary>
            <param name="inputList">The <see cref="T:System.Array"/> of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages to send.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.MoveMouseBy(System.Int32,System.Int32)">
            <summary>
            Simulates mouse movement by the specified distance measured as a delta from the current mouse location in pixels.
            </summary>
            <param name="pixelDeltaX">The distance in pixels to move the mouse horizontally.</param>
            <param name="pixelDeltaY">The distance in pixels to move the mouse vertically.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.MoveMouseTo(System.Double,System.Double)">
            <summary>
            Simulates mouse movement to the specified location on the primary display device.
            </summary>
            <param name="absoluteX">The destination's absolute X-coordinate on the primary display device where 0 is the extreme left hand side of the display device and 65535 is the extreme right hand side of the display device.</param>
            <param name="absoluteY">The destination's absolute Y-coordinate on the primary display device where 0 is the top of the display device and 65535 is the bottom of the display device.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.MoveMouseToPositionOnVirtualDesktop(System.Double,System.Double)">
            <summary>
            Simulates mouse movement to the specified location on the Virtual Desktop which includes all active displays.
            </summary>
            <param name="absoluteX">The destination's absolute X-coordinate on the virtual desktop where 0 is the left hand side of the virtual desktop and 65535 is the extreme right hand side of the virtual desktop.</param>
            <param name="absoluteY">The destination's absolute Y-coordinate on the virtual desktop where 0 is the top of the virtual desktop and 65535 is the bottom of the virtual desktop.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.LeftButtonDown">
            <summary>
            Simulates a mouse left button down gesture.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.LeftButtonUp">
            <summary>
            Simulates a mouse left button up gesture.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.LeftButtonClick">
            <summary>
            Simulates a mouse left-click gesture.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.LeftButtonDoubleClick">
            <summary>
            Simulates a mouse left button double-click gesture.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.RightButtonDown">
            <summary>
            Simulates a mouse right button down gesture.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.RightButtonUp">
            <summary>
            Simulates a mouse right button up gesture.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.RightButtonClick">
            <summary>
            Simulates a mouse right button click gesture.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.RightButtonDoubleClick">
            <summary>
            Simulates a mouse right button double-click gesture.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.XButtonDown(System.Int32)">
            <summary>
            Simulates a mouse X button down gesture.
            </summary>
            <param name="buttonId">The button id.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.XButtonUp(System.Int32)">
            <summary>
            Simulates a mouse X button up gesture.
            </summary>
            <param name="buttonId">The button id.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.XButtonClick(System.Int32)">
            <summary>
            Simulates a mouse X button click gesture.
            </summary>
            <param name="buttonId">The button id.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.XButtonDoubleClick(System.Int32)">
            <summary>
            Simulates a mouse X button double-click gesture.
            </summary>
            <param name="buttonId">The button id.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.VerticalScroll(System.Int32)">
            <summary>
            Simulates mouse vertical wheel scroll gesture.
            </summary>
            <param name="scrollAmountInClicks">The amount to scroll in clicks. A positive value indicates that the wheel was rotated forward, away from the user; a negative value indicates that the wheel was rotated backward, toward the user.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.HorizontalScroll(System.Int32)">
            <summary>
            Simulates a mouse horizontal wheel scroll gesture. Supported by Windows Vista and later.
            </summary>
            <param name="scrollAmountInClicks">The amount to scroll in clicks. A positive value indicates that the wheel was rotated to the right; a negative value indicates that the wheel was rotated to the left.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.Sleep(System.Int32)">
            <summary>
            Sleeps the executing thread to create a pause between simulated inputs.
            </summary>
            <param name="millsecondsTimeout">The number of milliseconds to wait.</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.MouseSimulator.Sleep(System.TimeSpan)">
            <summary>
            Sleeps the executing thread to create a pause between simulated inputs.
            </summary>
            <param name="timeout">The time to wait.</param>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.HARDWAREINPUT">
            <summary>
            The HARDWAREINPUT structure contains information about a simulated message generated by an input device other than a keyboard or mouse.  (see: http://msdn.microsoft.com/en-us/library/ms646269(VS.85).aspx)
            Declared in Winuser.h, include Windows.h
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.HARDWAREINPUT.Msg">
            <summary>
            Value specifying the message generated by the input hardware. 
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.HARDWAREINPUT.ParamL">
            <summary>
            Specifies the low-order word of the lParam parameter for uMsg. 
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.HARDWAREINPUT.ParamH">
            <summary>
            Specifies the high-order word of the lParam parameter for uMsg. 
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT">
            <summary>
            The INPUT structure is used by SendInput to store information for synthesizing input events such as keystrokes, mouse movement, and mouse clicks. (see: http://msdn.microsoft.com/en-us/library/ms646270(VS.85).aspx)
            Declared in Winuser.h, include Windows.h
            </summary>
            <remarks>
            This structure contains information identical to that used in the parameter list of the keybd_event or mouse_event function.
            Windows 2000/XP: INPUT_KEYBOARD supports nonkeyboard input methods, such as handwriting recognition or voice recognition, as if it were text input by using the KEYEVENTF_UNICODE flag. For more information, see the remarks section of KEYBDINPUT.
            </remarks>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT.Type">
            <summary>
            Specifies the type of the input event. This member can be one of the following values. 
            <see cref="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.InputType.Mouse"/> - The event is a mouse event. Use the mi structure of the union.
            <see cref="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.InputType.Keyboard"/> - The event is a keyboard event. Use the ki structure of the union.
            <see cref="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.InputType.Hardware"/> - Windows 95/98/Me: The event is from input hardware other than a keyboard or mouse. Use the hi structure of the union.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT.Data">
            <summary>
            The data structure that contains information about the simulated Mouse, Keyboard or Hardware event.
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.InputType">
            <summary>
            Specifies the type of the input event. This member can be one of the following values. 
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.InputType.Mouse">
            <summary>
            INPUT_MOUSE = 0x00 (The event is a mouse event. Use the mi structure of the union.)
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.InputType.Keyboard">
            <summary>
            INPUT_KEYBOARD = 0x01 (The event is a keyboard event. Use the ki structure of the union.)
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.InputType.Hardware">
            <summary>
            INPUT_HARDWARE = 0x02 (Windows 95/98/Me: The event is from input hardware other than a keyboard or mouse. Use the hi structure of the union.)
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.KEYBDINPUT">
            <summary>
            The KEYBDINPUT structure contains information about a simulated keyboard event.  (see: http://msdn.microsoft.com/en-us/library/ms646271(VS.85).aspx)
            Declared in Winuser.h, include Windows.h
            </summary>
            <remarks>
            Windows 2000/XP: INPUT_KEYBOARD supports nonkeyboard-input methodssuch as handwriting recognition or voice recognitionas if it were text input by using the KEYEVENTF_UNICODE flag. If KEYEVENTF_UNICODE is specified, SendInput sends a WM_KEYDOWN or WM_KEYUP message to the foreground thread's message queue with wParam equal to VK_PACKET. Once GetMessage or PeekMessage obtains this message, passing the message to TranslateMessage posts a WM_CHAR message with the Unicode character originally specified by wScan. This Unicode character will automatically be converted to the appropriate ANSI value if it is posted to an ANSI window.
            Windows 2000/XP: Set the KEYEVENTF_SCANCODE flag to define keyboard input in terms of the scan code. This is useful to simulate a physical keystroke regardless of which keyboard is currently being used. The virtual key value of a key may alter depending on the current keyboard layout or what other keys were pressed, but the scan code will always be the same.
            </remarks>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.KEYBDINPUT.KeyCode">
            <summary>
            Specifies a virtual-key code. The code must be a value in the range 1 to 254. The Winuser.h header file provides macro definitions (VK_*) for each value. If the dwFlags member specifies KEYEVENTF_UNICODE, wVk must be 0. 
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.KEYBDINPUT.Scan">
            <summary>
            Specifies a hardware scan code for the key. If dwFlags specifies KEYEVENTF_UNICODE, wScan specifies a Unicode character which is to be sent to the foreground application. 
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.KEYBDINPUT.Flags">
            <summary>
            Specifies various aspects of a keystroke. This member can be certain combinations of the following values.
            KEYEVENTF_EXTENDEDKEY - If specified, the scan code was preceded by a prefix byte that has the value 0xE0 (224).
            KEYEVENTF_KEYUP - If specified, the key is being released. If not specified, the key is being pressed.
            KEYEVENTF_SCANCODE - If specified, wScan identifies the key and wVk is ignored. 
            KEYEVENTF_UNICODE - Windows 2000/XP: If specified, the system synthesizes a VK_PACKET keystroke. The wVk parameter must be zero. This flag can only be combined with the KEYEVENTF_KEYUP flag. For more information, see the Remarks section. 
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.KEYBDINPUT.Time">
            <summary>
            Time stamp for the event, in milliseconds. If this parameter is zero, the system will provide its own time stamp. 
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.KEYBDINPUT.ExtraInfo">
            <summary>
            Specifies an additional value associated with the keystroke. Use the GetMessageExtraInfo function to obtain this information. 
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.KeyboardFlag">
            <summary>
            Specifies various aspects of a keystroke. This member can be certain combinations of the following values.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.KeyboardFlag.ExtendedKey">
            <summary>
            KEYEVENTF_EXTENDEDKEY = 0x0001 (If specified, the scan code was preceded by a prefix byte that has the value 0xE0 (224).)
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.KeyboardFlag.KeyUp">
            <summary>
            KEYEVENTF_KEYUP = 0x0002 (If specified, the key is being released. If not specified, the key is being pressed.)
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.KeyboardFlag.Unicode">
            <summary>
            KEYEVENTF_UNICODE = 0x0004 (If specified, wScan identifies the key and wVk is ignored.)
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.KeyboardFlag.ScanCode">
            <summary>
            KEYEVENTF_SCANCODE = 0x0008 (Windows 2000/XP: If specified, the system synthesizes a VK_PACKET keystroke. The wVk parameter must be zero. This flag can only be combined with the KEYEVENTF_KEYUP flag. For more information, see the Remarks section.)
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MouseFlag">
            <summary>
            The set of MouseFlags for use in the Flags property of the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MOUSEINPUT"/> structure. (See: http://msdn.microsoft.com/en-us/library/ms646273(VS.85).aspx)
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MouseFlag.Move">
            <summary>
            Specifies that movement occurred.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MouseFlag.LeftDown">
            <summary>
            Specifies that the left button was pressed.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MouseFlag.LeftUp">
            <summary>
            Specifies that the left button was released.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MouseFlag.RightDown">
            <summary>
            Specifies that the right button was pressed.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MouseFlag.RightUp">
            <summary>
            Specifies that the right button was released.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MouseFlag.MiddleDown">
            <summary>
            Specifies that the middle button was pressed.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MouseFlag.MiddleUp">
            <summary>
            Specifies that the middle button was released.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MouseFlag.XDown">
            <summary>
            Windows 2000/XP: Specifies that an X button was pressed.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MouseFlag.XUp">
            <summary>
            Windows 2000/XP: Specifies that an X button was released.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MouseFlag.VerticalWheel">
            <summary>
            Windows NT/2000/XP: Specifies that the wheel was moved, if the mouse has a wheel. The amount of movement is specified in mouseData. 
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MouseFlag.HorizontalWheel">
            <summary>
            Specifies that the wheel was moved horizontally, if the mouse has a wheel. The amount of movement is specified in mouseData. Windows 2000/XP:  Not supported.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MouseFlag.VirtualDesk">
            <summary>
            Windows 2000/XP: Maps coordinates to the entire desktop. Must be used with MOUSEEVENTF_ABSOLUTE.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MouseFlag.Absolute">
            <summary>
            Specifies that the dx and dy members contain normalized absolute coordinates. If the flag is not set, dxand dy contain relative data (the change in position since the last reported position). This flag can be set, or not set, regardless of what kind of mouse or other pointing device, if any, is connected to the system. For further information about relative mouse motion, see the following Remarks section.
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MOUSEINPUT">
            <summary>
            The MOUSEINPUT structure contains information about a simulated mouse event. (see: http://msdn.microsoft.com/en-us/library/ms646273(VS.85).aspx)
            Declared in Winuser.h, include Windows.h
            </summary>
            <remarks>
            If the mouse has moved, indicated by MOUSEEVENTF_MOVE, dx and dy specify information about that movement. The information is specified as absolute or relative integer values. 
            If MOUSEEVENTF_ABSOLUTE value is specified, dx and dy contain normalized absolute coordinates between 0 and 65,535. The event procedure maps these coordinates onto the display surface. Coordinate (0,0) maps onto the upper-left corner of the display surface; coordinate (65535,65535) maps onto the lower-right corner. In a multimonitor system, the coordinates map to the primary monitor. 
            Windows 2000/XP: If MOUSEEVENTF_VIRTUALDESK is specified, the coordinates map to the entire virtual desktop.
            If the MOUSEEVENTF_ABSOLUTE value is not specified, dx and dy specify movement relative to the previous mouse event (the last reported position). Positive values mean the mouse moved right (or down); negative values mean the mouse moved left (or up). 
            Relative mouse motion is subject to the effects of the mouse speed and the two-mouse threshold values. A user sets these three values with the Pointer Speed slider of the Control Panel's Mouse Properties sheet. You can obtain and set these values using the SystemParametersInfo function. 
            The system applies two tests to the specified relative mouse movement. If the specified distance along either the x or y axis is greater than the first mouse threshold value, and the mouse speed is not zero, the system doubles the distance. If the specified distance along either the x or y axis is greater than the second mouse threshold value, and the mouse speed is equal to two, the system doubles the distance that resulted from applying the first threshold test. It is thus possible for the system to multiply specified relative mouse movement along the x or y axis by up to four times.
            </remarks>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MOUSEINPUT.X">
            <summary>
            Specifies the absolute position of the mouse, or the amount of motion since the last mouse event was generated, depending on the value of the dwFlags member. Absolute data is specified as the x coordinate of the mouse; relative data is specified as the number of pixels moved. 
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MOUSEINPUT.Y">
            <summary>
            Specifies the absolute position of the mouse, or the amount of motion since the last mouse event was generated, depending on the value of the dwFlags member. Absolute data is specified as the y coordinate of the mouse; relative data is specified as the number of pixels moved. 
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MOUSEINPUT.MouseData">
            <summary>
            If dwFlags contains MOUSEEVENTF_WHEEL, then mouseData specifies the amount of wheel movement. A positive value indicates that the wheel was rotated forward, away from the user; a negative value indicates that the wheel was rotated backward, toward the user. One wheel click is defined as WHEEL_DELTA, which is 120. 
            Windows Vista: If dwFlags contains MOUSEEVENTF_HWHEEL, then dwData specifies the amount of wheel movement. A positive value indicates that the wheel was rotated to the right; a negative value indicates that the wheel was rotated to the left. One wheel click is defined as WHEEL_DELTA, which is 120.
            Windows 2000/XP: IfdwFlags does not contain MOUSEEVENTF_WHEEL, MOUSEEVENTF_XDOWN, or MOUSEEVENTF_XUP, then mouseData should be zero. 
            If dwFlags contains MOUSEEVENTF_XDOWN or MOUSEEVENTF_XUP, then mouseData specifies which X buttons were pressed or released. This value may be any combination of the following flags. 
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MOUSEINPUT.Flags">
            <summary>
            A set of bit flags that specify various aspects of mouse motion and button clicks. The bits in this member can be any reasonable combination of the following values. 
            The bit flags that specify mouse button status are set to indicate changes in status, not ongoing conditions. For example, if the left mouse button is pressed and held down, MOUSEEVENTF_LEFTDOWN is set when the left button is first pressed, but not for subsequent motions. Similarly, MOUSEEVENTF_LEFTUP is set only when the button is first released. 
            You cannot specify both the MOUSEEVENTF_WHEEL flag and either MOUSEEVENTF_XDOWN or MOUSEEVENTF_XUP flags simultaneously in the dwFlags parameter, because they both require use of the mouseData field. 
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MOUSEINPUT.Time">
            <summary>
            Time stamp for the event, in milliseconds. If this parameter is 0, the system will provide its own time stamp. 
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MOUSEINPUT.ExtraInfo">
            <summary>
            Specifies an additional value associated with the mouse event. An application calls GetMessageExtraInfo to obtain this extra information. 
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MOUSEKEYBDHARDWAREINPUT">
            <summary>
            The combined/overlayed structure that includes Mouse, Keyboard and Hardware Input message data (see: http://msdn.microsoft.com/en-us/library/ms646270(VS.85).aspx)
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MOUSEKEYBDHARDWAREINPUT.Mouse">
            <summary>
            The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MOUSEINPUT"/> definition.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MOUSEKEYBDHARDWAREINPUT.Keyboard">
            <summary>
            The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.KEYBDINPUT"/> definition.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MOUSEKEYBDHARDWAREINPUT.Hardware">
            <summary>
            The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.HARDWAREINPUT"/> definition.
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.NativeMethods">
            <summary>
            References all of the Native Windows API methods for the WindowsInput functionality.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.NativeMethods.GetAsyncKeyState(System.UInt16)">
            <summary>
            The GetAsyncKeyState function determines whether a key is up or down at the time the function is called, and whether the key was pressed after a previous call to GetAsyncKeyState. (See: http://msdn.microsoft.com/en-us/library/ms646293(VS.85).aspx)
            </summary>
            <param name="virtualKeyCode">Specifies one of 256 possible virtual-key codes. For more information, see Virtual Key Codes. Windows NT/2000/XP: You can use left- and right-distinguishing constants to specify certain keys. See the Remarks section for further information.</param>
            <returns>
            If the function succeeds, the return value specifies whether the key was pressed since the last call to GetAsyncKeyState, and whether the key is currently up or down. If the most significant bit is set, the key is down, and if the least significant bit is set, the key was pressed after the previous call to GetAsyncKeyState. However, you should not rely on this last behavior; for more information, see the Remarks. 
            
            Windows NT/2000/XP: The return value is zero for the following cases: 
            - The current desktop is not the active desktop
            - The foreground thread belongs to another process and the desktop does not allow the hook or the journal record.
            
            Windows 95/98/Me: The return value is the global asynchronous key state for each virtual key. The system does not check which thread has the keyboard focus.
            
            Windows 95/98/Me: Windows 95 does not support the left- and right-distinguishing constants. If you call GetAsyncKeyState with these constants, the return value is zero. 
            </returns>
            <remarks>
            The GetAsyncKeyState function works with mouse buttons. However, it checks on the state of the physical mouse buttons, not on the logical mouse buttons that the physical buttons are mapped to. For example, the call GetAsyncKeyState(VK_LBUTTON) always returns the state of the left physical mouse button, regardless of whether it is mapped to the left or right logical mouse button. You can determine the system's current mapping of physical mouse buttons to logical mouse buttons by calling 
            Copy CodeGetSystemMetrics(SM_SWAPBUTTON) which returns TRUE if the mouse buttons have been swapped.
            
            Although the least significant bit of the return value indicates whether the key has been pressed since the last query, due to the pre-emptive multitasking nature of Windows, another application can call GetAsyncKeyState and receive the "recently pressed" bit instead of your application. The behavior of the least significant bit of the return value is retained strictly for compatibility with 16-bit Windows applications (which are non-preemptive) and should not be relied upon.
            
            You can use the virtual-key code constants VK_SHIFT, VK_CONTROL, and VK_MENU as values for the vKey parameter. This gives the state of the SHIFT, CTRL, or ALT keys without distinguishing between left and right. 
            
            Windows NT/2000/XP: You can use the following virtual-key code constants as values for vKey to distinguish between the left and right instances of those keys. 
            
            Code Meaning 
            VK_LSHIFT Left-shift key. 
            VK_RSHIFT Right-shift key. 
            VK_LCONTROL Left-control key. 
            VK_RCONTROL Right-control key. 
            VK_LMENU Left-menu key. 
            VK_RMENU Right-menu key. 
            
            These left- and right-distinguishing constants are only available when you call the GetKeyboardState, SetKeyboardState, GetAsyncKeyState, GetKeyState, and MapVirtualKey functions. 
            </remarks>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.NativeMethods.GetKeyState(System.UInt16)">
            <summary>
            The GetKeyState function retrieves the status of the specified virtual key. The status specifies whether the key is up, down, or toggled (on, off alternating each time the key is pressed). (See: http://msdn.microsoft.com/en-us/library/ms646301(VS.85).aspx)
            </summary>
            <param name="virtualKeyCode">
            Specifies a virtual key. If the desired virtual key is a letter or digit (A through Z, a through z, or 0 through 9), nVirtKey must be set to the ASCII value of that character. For other keys, it must be a virtual-key code. 
            If a non-English keyboard layout is used, virtual keys with values in the range ASCII A through Z and 0 through 9 are used to specify most of the character keys. For example, for the German keyboard layout, the virtual key of value ASCII O (0x4F) refers to the "o" key, whereas VK_OEM_1 refers to the "o with umlaut" key.
            </param>
            <returns>
            The return value specifies the status of the specified virtual key, as follows: 
            If the high-order bit is 1, the key is down; otherwise, it is up.
            If the low-order bit is 1, the key is toggled. A key, such as the CAPS LOCK key, is toggled if it is turned on. The key is off and untoggled if the low-order bit is 0. A toggle key's indicator light (if any) on the keyboard will be on when the key is toggled, and off when the key is untoggled.
            </returns>
            <remarks>
            The key status returned from this function changes as a thread reads key messages from its message queue. The status does not reflect the interrupt-level state associated with the hardware. Use the GetAsyncKeyState function to retrieve that information. 
            An application calls GetKeyState in response to a keyboard-input message. This function retrieves the state of the key when the input message was generated. 
            To retrieve state information for all the virtual keys, use the GetKeyboardState function. 
            An application can use the virtual-key code constants VK_SHIFT, VK_CONTROL, and VK_MENU as values for the nVirtKey parameter. This gives the status of the SHIFT, CTRL, or ALT keys without distinguishing between left and right. An application can also use the following virtual-key code constants as values for nVirtKey to distinguish between the left and right instances of those keys. 
            VK_LSHIFT
            VK_RSHIFT
            VK_LCONTROL
            VK_RCONTROL
            VK_LMENU
            VK_RMENU
            
            These left- and right-distinguishing constants are available to an application only through the GetKeyboardState, SetKeyboardState, GetAsyncKeyState, GetKeyState, and MapVirtualKey functions. 
            </remarks>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.NativeMethods.SendInput(System.UInt32,Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT[],System.Int32)">
            <summary>
            The SendInput function synthesizes keystrokes, mouse motions, and button clicks.
            </summary>
            <param name="numberOfInputs">Number of structures in the Inputs array.</param>
            <param name="inputs">Pointer to an array of INPUT structures. Each structure represents an event to be inserted into the keyboard or mouse input stream.</param>
            <param name="sizeOfInputStructure">Specifies the size, in bytes, of an INPUT structure. If cbSize is not the size of an INPUT structure, the function fails.</param>
            <returns>The function returns the number of events that it successfully inserted into the keyboard or mouse input stream. If the function returns zero, the input was already blocked by another thread. To get extended error information, call GetLastError.Microsoft Windows Vista. This function fails when it is blocked by User Interface Privilege Isolation (UIPI). Note that neither GetLastError nor the return value will indicate the failure was caused by UIPI blocking.</returns>
            <remarks>
            Microsoft Windows Vista. This function is subject to UIPI. Applications are permitted to inject input only into applications that are at an equal or lesser integrity level.
            The SendInput function inserts the events in the INPUT structures serially into the keyboard or mouse input stream. These events are not interspersed with other keyboard or mouse input events inserted either by the user (with the keyboard or mouse) or by calls to keybd_event, mouse_event, or other calls to SendInput.
            This function does not reset the keyboard's current state. Any keys that are already pressed when the function is called might interfere with the events that this function generates. To avoid this problem, check the keyboard's state with the GetAsyncKeyState function and correct as necessary.
            </remarks>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.NativeMethods.GetMessageExtraInfo">
            <summary>
            The GetMessageExtraInfo function retrieves the extra message information for the current thread. Extra message information is an application- or driver-defined value associated with the current thread's message queue. 
            </summary>
            <returns></returns>
            <remarks>To set a thread's extra message information, use the SetMessageExtraInfo function. </remarks>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode">
            <summary>
            The list of VirtualKeyCodes (see: http://msdn.microsoft.com/en-us/library/ms645540(VS.85).aspx)
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.LBUTTON">
            <summary>
            Left mouse button
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.RBUTTON">
            <summary>
            Right mouse button
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.CANCEL">
            <summary>
            Control-break processing
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.MBUTTON">
            <summary>
            Middle mouse button (three-button mouse) - NOT contiguous with LBUTTON and RBUTTON
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.XBUTTON1">
            <summary>
            Windows 2000/XP: X1 mouse button - NOT contiguous with LBUTTON and RBUTTON
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.XBUTTON2">
            <summary>
            Windows 2000/XP: X2 mouse button - NOT contiguous with LBUTTON and RBUTTON
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.BACK">
            <summary>
            BACKSPACE key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.TAB">
            <summary>
            TAB key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.CLEAR">
            <summary>
            CLEAR key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.RETURN">
            <summary>
            ENTER key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.SHIFT">
            <summary>
            SHIFT key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.CONTROL">
            <summary>
            CTRL key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.MENU">
            <summary>
            ALT key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.PAUSE">
            <summary>
            PAUSE key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.CAPITAL">
            <summary>
            CAPS LOCK key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.KANA">
            <summary>
            Input Method Editor (IME) Kana mode
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.HANGEUL">
            <summary>
            IME Hanguel mode (maintained for compatibility; use HANGUL)
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.HANGUL">
            <summary>
            IME Hangul mode
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.JUNJA">
            <summary>
            IME Junja mode
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.FINAL">
            <summary>
            IME final mode
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.HANJA">
            <summary>
            IME Hanja mode
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.KANJI">
            <summary>
            IME Kanji mode
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.ESCAPE">
            <summary>
            ESC key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.CONVERT">
            <summary>
            IME convert
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.NONCONVERT">
            <summary>
            IME nonconvert
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.ACCEPT">
            <summary>
            IME accept
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.MODECHANGE">
            <summary>
            IME mode change request
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.SPACE">
            <summary>
            SPACEBAR
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.PRIOR">
            <summary>
            PAGE UP key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.NEXT">
            <summary>
            PAGE DOWN key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.END">
            <summary>
            END key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.HOME">
            <summary>
            HOME key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.LEFT">
            <summary>
            LEFT ARROW key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.UP">
            <summary>
            UP ARROW key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.RIGHT">
            <summary>
            RIGHT ARROW key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.DOWN">
            <summary>
            DOWN ARROW key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.SELECT">
            <summary>
            SELECT key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.PRINT">
            <summary>
            PRINT key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.EXECUTE">
            <summary>
            EXECUTE key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.SNAPSHOT">
            <summary>
            PRINT SCREEN key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.INSERT">
            <summary>
            INS key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.DELETE">
            <summary>
            DEL key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.HELP">
            <summary>
            HELP key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_0">
            <summary>
            0 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_1">
            <summary>
            1 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_2">
            <summary>
            2 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_3">
            <summary>
            3 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_4">
            <summary>
            4 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_5">
            <summary>
            5 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_6">
            <summary>
            6 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_7">
            <summary>
            7 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_8">
            <summary>
            8 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_9">
            <summary>
            9 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_A">
            <summary>
            A key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_B">
            <summary>
            B key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_C">
            <summary>
            C key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_D">
            <summary>
            D key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_E">
            <summary>
            E key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_F">
            <summary>
            F key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_G">
            <summary>
            G key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_H">
            <summary>
            H key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_I">
            <summary>
            I key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_J">
            <summary>
            J key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_K">
            <summary>
            K key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_L">
            <summary>
            L key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_M">
            <summary>
            M key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_N">
            <summary>
            N key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_O">
            <summary>
            O key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_P">
            <summary>
            P key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_Q">
            <summary>
            Q key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_R">
            <summary>
            R key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_S">
            <summary>
            S key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_T">
            <summary>
            T key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_U">
            <summary>
            U key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_V">
            <summary>
            V key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_W">
            <summary>
            W key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_X">
            <summary>
            X key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_Y">
            <summary>
            Y key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VK_Z">
            <summary>
            Z key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.LWIN">
            <summary>
            Left Windows key (Microsoft Natural keyboard)
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.RWIN">
            <summary>
            Right Windows key (Natural keyboard)
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.APPS">
            <summary>
            Applications key (Natural keyboard)
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.SLEEP">
            <summary>
            Computer Sleep key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.NUMPAD0">
            <summary>
            Numeric keypad 0 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.NUMPAD1">
            <summary>
            Numeric keypad 1 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.NUMPAD2">
            <summary>
            Numeric keypad 2 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.NUMPAD3">
            <summary>
            Numeric keypad 3 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.NUMPAD4">
            <summary>
            Numeric keypad 4 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.NUMPAD5">
            <summary>
            Numeric keypad 5 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.NUMPAD6">
            <summary>
            Numeric keypad 6 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.NUMPAD7">
            <summary>
            Numeric keypad 7 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.NUMPAD8">
            <summary>
            Numeric keypad 8 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.NUMPAD9">
            <summary>
            Numeric keypad 9 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.MULTIPLY">
            <summary>
            Multiply key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.ADD">
            <summary>
            Add key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.SEPARATOR">
            <summary>
            Separator key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.SUBTRACT">
            <summary>
            Subtract key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.DECIMAL">
            <summary>
            Decimal key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.DIVIDE">
            <summary>
            Divide key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F1">
            <summary>
            F1 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F2">
            <summary>
            F2 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F3">
            <summary>
            F3 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F4">
            <summary>
            F4 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F5">
            <summary>
            F5 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F6">
            <summary>
            F6 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F7">
            <summary>
            F7 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F8">
            <summary>
            F8 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F9">
            <summary>
            F9 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F10">
            <summary>
            F10 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F11">
            <summary>
            F11 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F12">
            <summary>
            F12 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F13">
            <summary>
            F13 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F14">
            <summary>
            F14 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F15">
            <summary>
            F15 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F16">
            <summary>
            F16 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F17">
            <summary>
            F17 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F18">
            <summary>
            F18 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F19">
            <summary>
            F19 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F20">
            <summary>
            F20 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F21">
            <summary>
            F21 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F22">
            <summary>
            F22 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F23">
            <summary>
            F23 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.F24">
            <summary>
            F24 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.NUMLOCK">
            <summary>
            NUM LOCK key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.SCROLL">
            <summary>
            SCROLL LOCK key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.LSHIFT">
            <summary>
            Left SHIFT key - Used only as parameters to GetAsyncKeyState() and GetKeyState()
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.RSHIFT">
            <summary>
            Right SHIFT key - Used only as parameters to GetAsyncKeyState() and GetKeyState()
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.LCONTROL">
            <summary>
            Left CONTROL key - Used only as parameters to GetAsyncKeyState() and GetKeyState()
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.RCONTROL">
            <summary>
            Right CONTROL key - Used only as parameters to GetAsyncKeyState() and GetKeyState()
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.LMENU">
            <summary>
            Left MENU key - Used only as parameters to GetAsyncKeyState() and GetKeyState()
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.RMENU">
            <summary>
            Right MENU key - Used only as parameters to GetAsyncKeyState() and GetKeyState()
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.BROWSER_BACK">
            <summary>
            Windows 2000/XP: Browser Back key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.BROWSER_FORWARD">
            <summary>
            Windows 2000/XP: Browser Forward key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.BROWSER_REFRESH">
            <summary>
            Windows 2000/XP: Browser Refresh key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.BROWSER_STOP">
            <summary>
            Windows 2000/XP: Browser Stop key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.BROWSER_SEARCH">
            <summary>
            Windows 2000/XP: Browser Search key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.BROWSER_FAVORITES">
            <summary>
            Windows 2000/XP: Browser Favorites key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.BROWSER_HOME">
            <summary>
            Windows 2000/XP: Browser Start and Home key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VOLUME_MUTE">
            <summary>
            Windows 2000/XP: Volume Mute key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VOLUME_DOWN">
            <summary>
            Windows 2000/XP: Volume Down key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.VOLUME_UP">
            <summary>
            Windows 2000/XP: Volume Up key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.MEDIA_NEXT_TRACK">
            <summary>
            Windows 2000/XP: Next Track key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.MEDIA_PREV_TRACK">
            <summary>
            Windows 2000/XP: Previous Track key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.MEDIA_STOP">
            <summary>
            Windows 2000/XP: Stop Media key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.MEDIA_PLAY_PAUSE">
            <summary>
            Windows 2000/XP: Play/Pause Media key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.LAUNCH_MAIL">
            <summary>
            Windows 2000/XP: Start Mail key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.LAUNCH_MEDIA_SELECT">
            <summary>
            Windows 2000/XP: Select Media key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.LAUNCH_APP1">
            <summary>
            Windows 2000/XP: Start Application 1 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.LAUNCH_APP2">
            <summary>
            Windows 2000/XP: Start Application 2 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.OEM_1">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard. Windows 2000/XP: For the US standard keyboard, the ';:' key 
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.OEM_PLUS">
            <summary>
            Windows 2000/XP: For any country/region, the '+' key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.OEM_COMMA">
            <summary>
            Windows 2000/XP: For any country/region, the ',' key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.OEM_MINUS">
            <summary>
            Windows 2000/XP: For any country/region, the '-' key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.OEM_PERIOD">
            <summary>
            Windows 2000/XP: For any country/region, the '.' key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.OEM_2">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard. Windows 2000/XP: For the US standard keyboard, the '/?' key 
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.OEM_3">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard. Windows 2000/XP: For the US standard keyboard, the '`~' key 
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.OEM_4">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard. Windows 2000/XP: For the US standard keyboard, the '[{' key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.OEM_5">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard. Windows 2000/XP: For the US standard keyboard, the '\|' key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.OEM_6">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard. Windows 2000/XP: For the US standard keyboard, the ']}' key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.OEM_7">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard. Windows 2000/XP: For the US standard keyboard, the 'single-quote/double-quote' key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.OEM_8">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.OEM_102">
            <summary>
            Windows 2000/XP: Either the angle bracket key or the backslash key on the RT 102-key keyboard
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.PROCESSKEY">
            <summary>
            Windows 95/98/Me, Windows NT 4.0, Windows 2000/XP: IME PROCESS key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.PACKET">
            <summary>
            Windows 2000/XP: Used to pass Unicode characters as if they were keystrokes. The PACKET key is the low word of a 32-bit Virtual Key value used for non-keyboard input methods. For more information, see Remark in KEYBDINPUT, SendInput, WM_KEYDOWN, and WM_KEYUP
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.ATTN">
            <summary>
            Attn key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.CRSEL">
            <summary>
            CrSel key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.EXSEL">
            <summary>
            ExSel key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.EREOF">
            <summary>
            Erase EOF key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.PLAY">
            <summary>
            Play key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.ZOOM">
            <summary>
            Zoom key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.NONAME">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.PA1">
            <summary>
            PA1 key
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode.OEM_CLEAR">
            <summary>
            Clear key
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.XButton">
            <summary>
            XButton definitions for use in the MouseData property of the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.MOUSEINPUT"/> structure. (See: http://msdn.microsoft.com/en-us/library/ms646273(VS.85).aspx)
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.XButton.XButton1">
            <summary>
            Set if the first X button is pressed or released.
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.XButton.XButton2">
            <summary>
            Set if the second X button is pressed or released.
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.WindowsInputDeviceStateAdaptor">
            <summary>
            An implementation of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputDeviceStateAdaptor"/> for Windows by calling the native <see cref="M:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.NativeMethods.GetKeyState(System.UInt16)"/> and <see cref="M:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.NativeMethods.GetAsyncKeyState(System.UInt16)"/> methods.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.WindowsInputDeviceStateAdaptor.IsKeyDown(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Determines whether the specified key is up or down by calling the GetKeyState function. (See: http://msdn.microsoft.com/en-us/library/ms646301(VS.85).aspx)
            </summary>
            <param name="keyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/> for the key.</param>
            <returns>
            	<c>true</c> if the key is down; otherwise, <c>false</c>.
            </returns>
            <remarks>
            The key status returned from this function changes as a thread reads key messages from its message queue. The status does not reflect the interrupt-level state associated with the hardware. Use the GetAsyncKeyState function to retrieve that information. 
            An application calls GetKeyState in response to a keyboard-input message. This function retrieves the state of the key when the input message was generated. 
            To retrieve state information for all the virtual keys, use the GetKeyboardState function. 
            An application can use the virtual-key code constants VK_SHIFT, VK_CONTROL, and VK_MENU as values for Bthe nVirtKey parameter. This gives the status of the SHIFT, CTRL, or ALT keys without distinguishing between left and right. An application can also use the following virtual-key code constants as values for nVirtKey to distinguish between the left and right instances of those keys. 
            VK_LSHIFT
            VK_RSHIFT
            VK_LCONTROL
            VK_RCONTROL
            VK_LMENU
            VK_RMENU
            
            These left- and right-distinguishing constants are available to an application only through the GetKeyboardState, SetKeyboardState, GetAsyncKeyState, GetKeyState, and MapVirtualKey functions. 
            </remarks>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.WindowsInputDeviceStateAdaptor.IsKeyUp(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Determines whether the specified key is up or downby calling the <see cref="M:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.NativeMethods.GetKeyState(System.UInt16)"/> function. (See: http://msdn.microsoft.com/en-us/library/ms646301(VS.85).aspx)
            </summary>
            <param name="keyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/> for the key.</param>
            <returns>
            	<c>true</c> if the key is up; otherwise, <c>false</c>.
            </returns>
            <remarks>
            The key status returned from this function changes as a thread reads key messages from its message queue. The status does not reflect the interrupt-level state associated with the hardware. Use the GetAsyncKeyState function to retrieve that information. 
            An application calls GetKeyState in response to a keyboard-input message. This function retrieves the state of the key when the input message was generated. 
            To retrieve state information for all the virtual keys, use the GetKeyboardState function. 
            An application can use the virtual-key code constants VK_SHIFT, VK_CONTROL, and VK_MENU as values for Bthe nVirtKey parameter. This gives the status of the SHIFT, CTRL, or ALT keys without distinguishing between left and right. An application can also use the following virtual-key code constants as values for nVirtKey to distinguish between the left and right instances of those keys. 
            VK_LSHIFT
            VK_RSHIFT
            VK_LCONTROL
            VK_RCONTROL
            VK_LMENU
            VK_RMENU
            
            These left- and right-distinguishing constants are available to an application only through the GetKeyboardState, SetKeyboardState, GetAsyncKeyState, GetKeyState, and MapVirtualKey functions. 
            </remarks>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.WindowsInputDeviceStateAdaptor.IsHardwareKeyDown(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Determines whether the physical key is up or down at the time the function is called regardless of whether the application thread has read the keyboard event from the message pump by calling the <see cref="M:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.NativeMethods.GetAsyncKeyState(System.UInt16)"/> function. (See: http://msdn.microsoft.com/en-us/library/ms646293(VS.85).aspx)
            </summary>
            <param name="keyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/> for the key.</param>
            <returns>
            	<c>true</c> if the key is down; otherwise, <c>false</c>.
            </returns>
            <remarks>
            The GetAsyncKeyState function works with mouse buttons. However, it checks on the state of the physical mouse buttons, not on the logical mouse buttons that the physical buttons are mapped to. For example, the call GetAsyncKeyState(VK_LBUTTON) always returns the state of the left physical mouse button, regardless of whether it is mapped to the left or right logical mouse button. You can determine the system's current mapping of physical mouse buttons to logical mouse buttons by calling 
            Copy CodeGetSystemMetrics(SM_SWAPBUTTON) which returns TRUE if the mouse buttons have been swapped.
            
            Although the least significant bit of the return value indicates whether the key has been pressed since the last query, due to the pre-emptive multitasking nature of Windows, another application can call GetAsyncKeyState and receive the "recently pressed" bit instead of your application. The behavior of the least significant bit of the return value is retained strictly for compatibility with 16-bit Windows applications (which are non-preemptive) and should not be relied upon.
            
            You can use the virtual-key code constants VK_SHIFT, VK_CONTROL, and VK_MENU as values for the vKey parameter. This gives the state of the SHIFT, CTRL, or ALT keys without distinguishing between left and right. 
            
            Windows NT/2000/XP: You can use the following virtual-key code constants as values for vKey to distinguish between the left and right instances of those keys. 
            
            Code Meaning 
            VK_LSHIFT Left-shift key. 
            VK_RSHIFT Right-shift key. 
            VK_LCONTROL Left-control key. 
            VK_RCONTROL Right-control key. 
            VK_LMENU Left-menu key. 
            VK_RMENU Right-menu key. 
            
            These left- and right-distinguishing constants are only available when you call the GetKeyboardState, SetKeyboardState, GetAsyncKeyState, GetKeyState, and MapVirtualKey functions. 
            </remarks>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.WindowsInputDeviceStateAdaptor.IsHardwareKeyUp(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Determines whether the physical key is up or down at the time the function is called regardless of whether the application thread has read the keyboard event from the message pump by calling the <see cref="M:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.NativeMethods.GetAsyncKeyState(System.UInt16)"/> function. (See: http://msdn.microsoft.com/en-us/library/ms646293(VS.85).aspx)
            </summary>
            <param name="keyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/> for the key.</param>
            <returns>
            	<c>true</c> if the key is up; otherwise, <c>false</c>.
            </returns>
            <remarks>
            The GetAsyncKeyState function works with mouse buttons. However, it checks on the state of the physical mouse buttons, not on the logical mouse buttons that the physical buttons are mapped to. For example, the call GetAsyncKeyState(VK_LBUTTON) always returns the state of the left physical mouse button, regardless of whether it is mapped to the left or right logical mouse button. You can determine the system's current mapping of physical mouse buttons to logical mouse buttons by calling 
            Copy CodeGetSystemMetrics(SM_SWAPBUTTON) which returns TRUE if the mouse buttons have been swapped.
            
            Although the least significant bit of the return value indicates whether the key has been pressed since the last query, due to the pre-emptive multitasking nature of Windows, another application can call GetAsyncKeyState and receive the "recently pressed" bit instead of your application. The behavior of the least significant bit of the return value is retained strictly for compatibility with 16-bit Windows applications (which are non-preemptive) and should not be relied upon.
            
            You can use the virtual-key code constants VK_SHIFT, VK_CONTROL, and VK_MENU as values for the vKey parameter. This gives the state of the SHIFT, CTRL, or ALT keys without distinguishing between left and right. 
            
            Windows NT/2000/XP: You can use the following virtual-key code constants as values for vKey to distinguish between the left and right instances of those keys. 
            
            Code Meaning 
            VK_LSHIFT Left-shift key. 
            VK_RSHIFT Right-shift key. 
            VK_LCONTROL Left-control key. 
            VK_RCONTROL Right-control key. 
            VK_LMENU Left-menu key. 
            VK_RMENU Right-menu key. 
            
            These left- and right-distinguishing constants are only available when you call the GetKeyboardState, SetKeyboardState, GetAsyncKeyState, GetKeyState, and MapVirtualKey functions. 
            </remarks>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.WindowsInputDeviceStateAdaptor.IsTogglingKeyInEffect(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode)">
            <summary>
            Determines whether the toggling key is toggled on (in-effect) or not by calling the <see cref="M:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.NativeMethods.GetKeyState(System.UInt16)"/> function.  (See: http://msdn.microsoft.com/en-us/library/ms646301(VS.85).aspx)
            </summary>
            <param name="keyCode">The <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.VirtualKeyCode"/> for the key.</param>
            <returns>
            	<c>true</c> if the toggling key is toggled on (in-effect); otherwise, <c>false</c>.
            </returns>
            <remarks>
            The key status returned from this function changes as a thread reads key messages from its message queue. The status does not reflect the interrupt-level state associated with the hardware. Use the GetAsyncKeyState function to retrieve that information. 
            An application calls GetKeyState in response to a keyboard-input message. This function retrieves the state of the key when the input message was generated. 
            To retrieve state information for all the virtual keys, use the GetKeyboardState function. 
            An application can use the virtual-key code constants VK_SHIFT, VK_CONTROL, and VK_MENU as values for the nVirtKey parameter. This gives the status of the SHIFT, CTRL, or ALT keys without distinguishing between left and right. An application can also use the following virtual-key code constants as values for nVirtKey to distinguish between the left and right instances of those keys. 
            VK_LSHIFT
            VK_RSHIFT
            VK_LCONTROL
            VK_RCONTROL
            VK_LMENU
            VK_RMENU
            
            These left- and right-distinguishing constants are available to an application only through the GetKeyboardState, SetKeyboardState, GetAsyncKeyState, GetKeyState, and MapVirtualKey functions. 
            </remarks>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.InputSimulator.WindowsInputMessageDispatcher">
            <summary>
            Implements the <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.IInputMessageDispatcher"/> by calling />.
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Input.InputSimulator.WindowsInputMessageDispatcher.DispatchInput(Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT[])">
            <summary>
            Dispatches the specified list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages in their specified order by issuing a single called to <see />.
            </summary>
            <param name="inputs">The list of <see cref="T:Cocon90.Lib.Util.Window.Input.InputSimulator.Native.INPUT"/> messages to be dispatched.</param>
            <exception cref="T:System.ArgumentException">If the <paramref name="inputs"/> array is empty.</exception>
            <exception cref="T:System.ArgumentNullException">If the <paramref name="inputs"/> array is null.</exception>
            <exception cref="T:System.Exception">If the any of the commands in the <paramref name="inputs"/> array could not be sent successfully.</exception>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.MouseSimulator">
            <summary>
            鼠标模拟器
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Input.KeyboardSimulator">
            <summary>
            键盘模拟器
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.memoryHelper">
            <summary>
            内存助手
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.memoryHelper.SetProcessWorkingSetSize(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            设置操作系统实际划分给进程使用的内存容量,减少内存的使用率,在程序最小化时 立即释放内存
            </summary>
            <param name="process">当前运行程序的进程</param>
            <param name="minSize">分配最小内存</param>
            <param name="maxSize">分配最大内存</param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.memoryHelper.FlushMemory">
            <summary>
            设置操作系统实际划分给进程使用的内存容量,减少内存的使用率,在程序最小化时 立即释放内存
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Regedit.regsvrHelper">
            <summary>
            dll或ocx注册工具
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Regedit.regsvrHelper.RegResult">
            <summary>
            注册结果
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Regedit.regsvrHelper.RegResult.HasReg">
            <summary>
            0 已经注册
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Regedit.regsvrHelper.RegResult.RegSuccess">
            <summary>
            1 注册成功
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Regedit.regsvrHelper.RegResult.RegFail">
            <summary>
            2 注册失败
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Regedit.regsvrHelper.RegResult.RegFileNotExist">
            <summary>
            预注册的.OCX或dll文件不存在
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Regedit.regsvrHelper.RegControl(System.Guid,System.String,System.String)">
            <summary>
            注册控件，clsidGuid:传入注册的CLSID编码(Guid值)用为组件的唯一编号。ocxNote:备注 。ocxFilePath文件路径 
            </summary>
            <param name="ocxFilePath"></param>
            <returns>[0]--已经注册过;[1]--注册成功；[-1]--注册失败；[-2]--预注册的.OCX文件不存在</returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Regedit.regsvrHelper.RunCmd(System.String)">
            <summary>
            Process类调用外部程序regsvr32.exe程序
            加入参数 "/c " + 要执行的命令来执行一个dos命令
            （/c代表执行参数指定的命令后关闭cmd.exe /k参数则不关闭cmd.exe）
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Regedit.regeditHelper">
            <summary>
            注册表 辅助操作类
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Regedit.regeditHelper.GetLocalMachineValueByPath(System.String,System.String,System.String)">
            <summary>
            取得路径path下（如：Software\\MyCompany\\MySoft ）指定Key 的字符串值。没有时，返回DefaultValue
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Regedit.regeditHelper.SetLocalMachineValueByPath(System.String,System.String,System.String)">
            <summary>
            设置路径path下（如：Software\\MyCompany\\MySoft ）指定Key 的字符串值 ，成功则返回True，如果有异常，则返回False
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Service.ServiceControl">
            <summary>
            服务控制类，依靠ServiceHelper类，进行安装和卸载服务
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Service.ServiceControl.#ctor(System.String,System.String,System.String)">
            <summary>
            服务名称，服务主程序全路径，服务描述
            </summary>
            <param name="serviceName"></param>
            <param name="servicePath"></param>
            <param name="serviceDiscription"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Service.ServiceControl.#ctor(System.String,System.String)">
            <summary>
            服务名称，服务主程序全路径
            </summary>
            <param name="serviceName"></param>
            <param name="servicePath"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Service.ServiceControl.Stop">
            <summary>
            停止并卸载
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Service.ServiceControl.Start">
            <summary>
            安装并启动
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Service.ServiceControl.IntelligenceRun">
            <summary>
            如果未安装，则安装，如果未运行，则安装并启动，操作成功则返回True，失败则返回False。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Service.ServiceNotExistException">
            <summary>
            服务不存在异常
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Service.ServiceStartType">
            <summary>
            服务启动类型
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Service.ServiceAccount">
            <summary>
            服务运行帐户
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Service.ServiceHelper">
            <summary>
            Windows 服务辅助类
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Service.ServiceHelper.Install(System.String,System.String,System.String,System.String,Cocon90.Lib.Util.Window.Service.ServiceStartType,Cocon90.Lib.Util.Window.Service.ServiceAccount,System.String[])">
            <summary>
            安装服务
            </summary>
            <param name="serviceName">服务名</param>
            <param name="displayName">友好名称</param>
            <param name="binaryFilePath">映像文件路径，可带参数</param>
            <param name="description">服务描述</param>
            <param name="startType">启动类型</param>
            <param name="account">启动账户</param>
            <param name="dependencies">依赖服务</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Service.ServiceHelper.Uninstall(System.String)">
            <summary>
            卸载服务
            </summary>
            <param name="serviceName">服务名</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Service.ServiceHelper.GetServiceAccountName(Cocon90.Lib.Util.Window.Service.ServiceAccount)">
            <summary>
            转换帐户枚举为有效参数
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Service.ServiceHelper.ProcessDependencies(System.String[])">
            <summary>
            处理依赖服务参数
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Service.ServiceHelper.OpenSCManager">
            <summary>
            打开服务管理器
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Service.ServiceHelper.OpenService(System.String,System.IntPtr@)">
            <summary>
            打开服务
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="scmHandle">服务管理器句柄。供调用者释放</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Service.ServiceHelper.StopService(System.IntPtr)">
            <summary>
            停止服务
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Service.ServiceHelper.EnumDependentServices(System.IntPtr,Cocon90.Lib.Util.Window.Service.ServiceHelper.EnumServiceState)">
            <summary>
            遍历从属服务
            </summary>
            <param name="serviceHandle"></param>
            <param name="state">选择性遍历（活动、非活动、全部）</param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Service.ServiceHelper.GetServiceStatus(System.IntPtr)">
            <summary>
            获取服务状态
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Service.ServiceHelper.WaitForStatus(System.IntPtr,Cocon90.Lib.Util.Window.Service.ServiceHelper.ServiceState,System.TimeSpan)">
            <summary>
            等候服务至目标状态
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Service.ServiceHelper.Win32Class">
            <summary>
            Win32 API相关
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Service.ServiceHelper.Win32Class.SC_MANAGER_ALL_ACCESS">
            <summary>
            打开服务管理器时请求的权限：全部
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Service.ServiceHelper.Win32Class.SERVICE_WIN32_OWN_PROCESS">
            <summary>
            服务类型：自有进程类服务
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Service.ServiceHelper.Win32Class.SERVICE_ALL_ACCESS">
            <summary>
            打开服务时请求的权限：全部
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Service.ServiceHelper.Win32Class.SERVICE_STOP">
            <summary>
            打开服务时请求的权限：停止
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Service.ServiceHelper.Win32Class.SERVICE_CONTROL_STOP">
            <summary>
            服务操作标记：停止
            </summary>
        </member>
        <member name="F:Cocon90.Lib.Util.Window.Service.ServiceHelper.Win32Class.SERVICE_ERROR_NORMAL">
            <summary>
            服务出错行为标记
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Service.ServiceHelper.Win32Class.SERVICE_STATUS">
            <summary>
            服务状态结构体
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Service.ServiceHelper.Win32Class.SERVICE_DESCRIPTION">
            <summary>
            服务描述结构体
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Service.ServiceHelper.Win32Class.ENUM_SERVICE_STATUS">
            <summary>
            服务状态结构体。遍历API会用到
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Service.ServiceHelper.EnumServiceState">
            <summary>
            服务状态枚举。用于遍历从属服务API
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Service.ServiceHelper.ServiceState">
            <summary>
            服务状态
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Session.CrossSessionExecuter">
            <summary>
            Windows跨Session辅助执行者
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Session.CrossSessionExecuter.StartProcessAsCurrentUser(System.String,System.String,System.String,System.Boolean)">
            <summary>
            启动一个进程
            </summary>
            <param name="appPath"></param>
            <param name="cmdLine"></param>
            <param name="workDir"></param>
            <param name="visible"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Session.CrossSessionExecuter.ShowMessageBox(System.String,System.String)">
            <summary>
            显示消息框
            </summary>
            <param name="message"></param>
            <param name="title"></param>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Usb.UsbDeviceListener">
            <summary>
            USB存储设备监听类
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Usb.UsbDeviceListener.#ctor">
            <summary>
            实例化一个存储设备监听类
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Usb.UsbDeviceListener.PopupDevice(System.String)">
            <summary>
            弹出驱动器，指定驱动器的盘符，如H盘，就输入"H" 返回是否弹出成功
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Usb.UsbDeviceListener.WndProc(System.Windows.Forms.Message@)">
            <summary>
            在Form对像的protected override void WndProc(ref Message m)方法中，加入的方法，用来起到检测USB作用。
            </summary>
            <param name="m"></param>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Usb.UsbDeviceListener.UsbRemovableStatusChanged">
            <summary>
            USB可移动存储设备改变委托
            </summary>
            <param name="status"></param>
        </member>
        <member name="E:Cocon90.Lib.Util.Window.Usb.UsbDeviceListener.OnUsbRemovableStatusChanged">
            <summary>
            事件 USB可移动存储设备改变时发生
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Usb.USBSerialNumber">
            <summary>
            取得驱动器硬件序列号信息的类。
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Usb.USBSerialNumber.getSerialNumberFromDriveLetter(System.String)">
            <summary>
            获取驱动器硬件序列号，转入盘符，比如I:\盘就传"I"
            </summary>
            <param name="driveLetter"></param>
            <returns></returns>
        </member>
        <member name="T:Cocon90.Lib.Util.Window.Usb.DeviceSteck">
            <summary>
            用来记忆插入的设备和拔出的设备的一个类
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Usb.DeviceSteck.Add">
            <summary>
            插入设备时调用此方法。
            </summary>
            <param name="usb"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Usb.DeviceSteck.Remove">
            <summary>
             拔出设备时调用此方法，可以返回被拔掉的设备的信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Usb.DeviceSteck.DeleteDeviceFormList(Cocon90.Lib.Util.Window.Usb.RemovableStatusModel)">
            <summary>
            从列表中移除
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Cocon90.Lib.Util.Window.Usb.DeviceSteck.GetSerialNumberByDeviceName(System.String)">
            <summary>
            通过名称，取得设备信息。
            </summary>
            <param name="serialNumber"></param>
            <returns></returns>
        </member>
        <member name="P:Cocon90.Lib.Util.Window.Usb.RemovableStatusModel.IsConnectionToPc">
            <summary>
            True:连接到PC，False:从PC上弹出。
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Window.Usb.RemovableStatusModel.DeviceInfo">
            <summary>
            驱动器设备信息
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Window.Usb.RemovableStatusModel.DeviceName">
            <summary>
            设备名称
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Window.Usb.RemovableStatusModel.DateTime">
            <summary>
            设备状态发现时间
            </summary>
        </member>
        <member name="P:Cocon90.Lib.Util.Window.Usb.RemovableStatusModel.SerialNumber">
            <summary>
            设备序列号
            </summary>
        </member>
        <member name="T:Cocon90.Lib.Util.WndProc.wndProcHelper">
            <summary>
             在Form对像的protected override void WndProc(ref Message m)方法中，加入的方法，用来起到某些特殊作用。
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Util.WndProc.wndProcHelper.SetFormMinimizedOnClose(System.Windows.Forms.Form,System.Windows.Forms.Message@,System.Action)">
            <summary>
            当用户点击了关闭窗口时，自动执行最小化操作。除非结束进程才可关闭。
            </summary>
            <param name="from">要最小化的窗口</param>
            <param name="m">传入override void WndProc(ref Message m)中的m</param>
            <param name="action">最小化后要执行的其它操作。</param>
        </member>
        <member name="M:Cocon90.Lib.Util.WndProc.wndProcHelper.SetFormHideOnMinimizedOrClose(System.Windows.Forms.Form,System.Windows.Forms.Message@,System.Action)">
            <summary>
            当用户点击了关闭窗口或最小化窗口时，自动执行窗体的Hide方法。除非结束进程才可关闭
            </summary>
            <param name="from">要Hide的窗口</param>
            <param name="m">传入override void WndProc(ref Message m)中的m</param>
            <param name="action">最小化后要执行的其它操作。</param>
        </member>
        <member name="T:Cocon90.Lib.Web.Request.postFileHelper">
            <summary>
            以表单文件的形式提交
            </summary>
        </member>
        <member name="M:Cocon90.Lib.Web.Request.postFileHelper.PostFile(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            以表单的形式提交文件，可以额外传送一对键值对。stringKey/stringContent
            </summary>
            <param name="url">提交到的接收地址</param>
            <param name="stringKey">额外传送的字符串内容的键</param>
            <param name="stringContent">额外传送的字符串内容的值</param>
            <param name="fileKey">上传文件的键</param>
            <param name="filePath">文件全路径</param>
            <returns></returns>
        </member>
        <member name="M:System.DatetimeExtension.StartOfDay(System.DateTime)">
            <summary>
            取得该日期的日初
            </summary>
            <param name="datetime"></param>
            <returns></returns>
        </member>
        <member name="M:System.DatetimeExtension.EndOfDay(System.DateTime)">
            <summary>
            取得该日期的日末，精确到最后一毫秒
            </summary>
            <param name="datetime"></param>
            <returns></returns>
        </member>
        <member name="M:System.DatetimeExtension.ConvertIntDateTime(System.Double)">
            <summary>
            将Unix时间戳转换为DateTime类型时间
            </summary>
            <param name="d">double 型数字</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:System.DatetimeExtension.ConvertDateTimeInt(System.DateTime)">
            <summary>
            将c# DateTime时间格式转换为Unix时间戳格式
            </summary>
            <param name="time">时间</param>
            <returns>long</returns>
        </member>
    </members>
</doc>
